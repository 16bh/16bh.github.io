<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>凡·间</title>
  <subtitle>这一切都是命运石之门的选择！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://16bh.github.io/"/>
  <updated>2019-02-12T07:38:30.650Z</updated>
  <id>https://16bh.github.io/</id>
  
  <author>
    <name>小凡</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mac软件正版化</title>
    <link href="https://16bh.github.io/2019/02/11/replace-hacker-software/"/>
    <id>https://16bh.github.io/2019/02/11/replace-hacker-software/</id>
    <published>2019-02-11T09:12:13.000Z</published>
    <updated>2019-02-12T07:38:30.650Z</updated>
    
    <content type="html"><![CDATA[<p>2018年个人比较有成就感的事情之一是把电脑里的盗版软件基本都去掉了。一是为了电脑的安全，盗版软件有安全隐患，二个也是为了支持正版软件，码农写软件不易</p>
<p>两种途径：</p>
<ol>
<li>购买正版</li>
<li>用免费软件替代</li>
</ol>
<a id="more"></a>
<h2 id="Paste和Yoink：购买正版"><a href="#Paste和Yoink：购买正版" class="headerlink" title="Paste和Yoink：购买正版"></a>Paste和Yoink：购买正版</h2><p>一个是管理剪切板的，一个是文件临时中转站</p>
<p>这两款软件很早就开始用了，尤其是Paste，基本离不开。所以一开始就买了正版，并不贵，后面还打折了</p>
<h2 id="Alfred：使用免费版"><a href="#Alfred：使用免费版" class="headerlink" title="Alfred：使用免费版"></a>Alfred：使用免费版</h2><p>这个收费功能wordflows很强大，但还是有替代方案的。所以免费功能足够用了，非常值得用来替代系统原生的Spotlight</p>
<h2 id="小历：购买正版"><a href="#小历：购买正版" class="headerlink" title="小历：购买正版"></a>小历：购买正版</h2><p>一款小而美的日历软件，只要一块钱，用来取代系统的时间工具，可以展开日历，规划日程</p>
<h2 id="Quiver-Bear-用备忘录替代"><a href="#Quiver-Bear-用备忘录替代" class="headerlink" title="Quiver/Bear: 用备忘录替代"></a>Quiver/Bear: 用备忘录替代</h2><p>笔记本工具，用来随时记录工作、生活等片段笔记。Quiver收费，Bear需要订阅，如果资金充足可以选择这两款，我后面是用系统自带的备忘录替代的，通过iclound备份，在多台电脑和手机之间同步效果非常好，唯一的缺点应该是不支持markdown</p>
<h2 id="Bear-用Macdown-Typora替代"><a href="#Bear-用Macdown-Typora替代" class="headerlink" title="Bear: 用Macdown/Typora替代"></a>Bear: 用Macdown/Typora替代</h2><p>同样，原来写markdown的时候用的bear软件，收费后用免费的Macdown/Typora替代，这两个软件风格不一样，Macdown参考了Mou是多窗口的，有编辑区和预览区，Typora则是“所见即所得”的代表</p>
<h2 id="Bartender：-用Vanilla-Dozer替代"><a href="#Bartender：-用Vanilla-Dozer替代" class="headerlink" title="Bartender： 用Vanilla/Dozer替代"></a>Bartender： 用Vanilla/Dozer替代</h2><p>菜单栏管理工具。</p>
<p>菜单栏是很方便的入口，很多mac软件都支持菜单栏图标，图标过多了就不方便使用，所以需要一款整理的工具。</p>
<p>bartender是功能最强大的工具，收费</p>
<p>vanilla和dozer是免费的替代品，比较了一下软件的交互，我现在用的是dozer</p>
<h2 id="Moom-用Manico替代"><a href="#Moom-用Manico替代" class="headerlink" title="Moom: 用Manico替代"></a>Moom: 用Manico替代</h2><p>窗口管理工具，调节窗口的大小，完全可用Manico替代，收费6元，限免的时候下载了</p>
<h2 id="redisdeskmanager-用Medis替代"><a href="#redisdeskmanager-用Medis替代" class="headerlink" title="redisdeskmanager: 用Medis替代"></a>redisdeskmanager: 用Medis替代</h2><p>redis GUI软件</p>
<h2 id="OCR：用iText免费版"><a href="#OCR：用iText免费版" class="headerlink" title="OCR：用iText免费版"></a>OCR：用iText免费版</h2><p>识别图片中的文字，在应对线上问题，从用户的截图中提取信息时很管用</p>
<p>iText免费版提供了足够多的试用次数。<br>作者是个独立开发者，开发了好几个实用的小工具</p>
<h2 id="目前暂时找不到替代品的"><a href="#目前暂时找不到替代品的" class="headerlink" title="目前暂时找不到替代品的"></a>目前暂时找不到替代品的</h2><ul>
<li>charles</li>
<li>IDEA</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2018年个人比较有成就感的事情之一是把电脑里的盗版软件基本都去掉了。一是为了电脑的安全，盗版软件有安全隐患，二个也是为了支持正版软件，码农写软件不易&lt;/p&gt;
&lt;p&gt;两种途径：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;购买正版&lt;/li&gt;
&lt;li&gt;用免费软件替代&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Software" scheme="https://16bh.github.io/categories/Software/"/>
    
    
  </entry>
  
  <entry>
    <title>2019 reading list</title>
    <link href="https://16bh.github.io/2019/01/24/2019-reading-list/"/>
    <id>https://16bh.github.io/2019/01/24/2019-reading-list/</id>
    <published>2019-01-24T10:40:18.000Z</published>
    <updated>2019-01-28T09:32:51.296Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<h2 id="1月"><a href="#1月" class="headerlink" title="1月"></a>1月</h2><ul>
<li>《神奇动物在哪里》 JK罗琳 ★★★★</li>
<li>《神奇的魁地奇球》JK罗琳 ★★★★</li>
<li>《哈利波特与密室纪念版》JK罗琳 ★★★★★</li>
<li>《一只名叫鲍勃的猫》詹姆斯鲍文 ★★★★</li>
<li>《禅者的初心》铃木俊隆  ★★★★★</li>
<li>《鹿鼎记》金庸 ★★★★★</li>
<li>《流浪地球》刘慈欣</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;1月&quot;&gt;&lt;a href=&quot;#1月&quot; class=&quot;headerlink&quot; title=&quot;1月&quot;&gt;&lt;/a&gt;1月&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;《神奇动物在哪里》 JK罗琳 ★★★★&lt;/li&gt;
&lt;li&gt;《神奇的魁地奇球》JK罗琳 ★★★
    
    </summary>
    
      <category term="Reading" scheme="https://16bh.github.io/categories/Reading/"/>
    
    
  </entry>
  
  <entry>
    <title>2018读书总结</title>
    <link href="https://16bh.github.io/2019/01/21/2018-reading-list/"/>
    <id>https://16bh.github.io/2019/01/21/2018-reading-list/</id>
    <published>2019-01-21T11:21:01.000Z</published>
    <updated>2019-01-24T10:41:36.415Z</updated>
    
    <content type="html"><![CDATA[<p>2018年共看了</p>
<p>龙应台 5本<br>严歌苓 2本<br>是枝裕和 4本<br>夏目漱石 2本<br>村上春树 2本<br>弗雷德里克·巴克曼 3本<br>肯福莱特 3本</p>
<a id="more"></a>
<blockquote>
<p>打分标准如下：</p>
<p>极差        ★</p>
<p>较差        ★★</p>
<p>还行        ★★★ </p>
<p>推荐        ★★★★</p>
<p>力荐     ★★★★★</p>
</blockquote>
<h2 id="4月"><a href="#4月" class="headerlink" title="4月"></a>4月</h2><ul>
<li>《史蒂夫乔布斯传》沃尔特·艾萨克森 ★★★★★</li>
<li>《孩子们的诗》★★★★★</li>
<li>《亲爱的安德烈》龙应台 ★★★★★</li>
<li>《滚蛋吧肿瘤君》熊顿 ★★★★</li>
<li>《平凡的世界》 路遥 ★★★★★</li>
<li>《孩子你慢慢来》龙应台 ★★★★★</li>
<li>《影响力》 罗伯特·西奥迪尼  ★★★★★</li>
<li>《西游日记》今何在 ★★★★★</li>
<li>《追风筝的人》卡勒德·胡赛尼 ★★★★★</li>
<li>《撒哈拉的故事》三毛 ★★★★</li>
<li>《芳华》严歌苓 ★★★★★</li>
<li>《外婆的道歉信》弗雷德里克·巴克曼 ★★★★★</li>
<li>《阿里巴巴：天下没有难做的生意》郑作时 ★★★</li>
<li>《我们仨》杨绛 ★★★★★</li>
<li>《哈利波特与被诅咒的孩子》JK罗琳 ★★★</li>
<li>《情人》渡边淳一 ★★★★</li>
</ul>
<h2 id="5月"><a href="#5月" class="headerlink" title="5月"></a>5月</h2><ul>
<li>《巨人的陨落》肯福莱特 ★★★★★</li>
<li>《世界的凛冬》 肯福莱特 ★★★★★</li>
</ul>
<h2 id="6月"><a href="#6月" class="headerlink" title="6月"></a>6月</h2><ul>
<li>《呐喊》鲁迅 ★★★★★</li>
<li>《起风了》堀辰雄 ★★★</li>
<li>《夏目友人帐》村井贞之 ★★★</li>
<li>《牛棚杂忆》季羡林 ★★★★★</li>
<li>《爱你就像爱生命》王小波 ★★★★★</li>
<li>《手机》刘震云 ★★★★★</li>
<li>《四十四次日落》钟伟民 ★★★</li>
<li>《一句顶一万句》刘震云 ★★★★</li>
<li>《快速阅读术》印南敦史 ★★★★★</li>
<li>《我叫刘跃进》刘震云 ★★★</li>
<li>《父亲进城》陈仓 ★★★★</li>
<li>《我不》大冰 ★★★</li>
<li>《洗澡》杨绛 ★★★★</li>
<li>《你的善良必须有点锋芒》慕颜歌 ★★★</li>
<li>《非暴力沟通》马歇尔·卢森堡 ★★★★★</li>
<li>《一个叫欧维的男人决定去死》 弗雷德里克·巴克曼  ★★★★★</li>
<li>《极客与团队》★★★★</li>
<li>《心经》玄奘 ★★★★★</li>
</ul>
<h2 id="7月"><a href="#7月" class="headerlink" title="7月"></a>7月</h2><ul>
<li>《清单人生》弗雷德里克·巴克曼 ★★★★★</li>
<li>《祈祷落幕时》东野圭吾 ★★★★</li>
<li>《杀死一只知更鸟》哈珀李 ★★★★★</li>
<li>《守望之心》哈珀李 ★★★</li>
<li>《玛格丽特小镇》加泽文 ★★★★</li>
<li>《时光倒流的女孩》加泽文 ★★★★</li>
<li>《步履不停》是枝裕和 ★★★★</li>
<li>《奇迹》是枝裕和 ★★★★</li>
<li>《比海更深》是枝裕和 ★★★★</li>
<li>《兄弟》余华 ★★★★★</li>
<li>《人生所有的路，都是必经之路》鬼脚七 ★★★</li>
<li>《太年轻》加泽文 ★★★★</li>
<li>《少爷》夏目漱石 ★★★★★</li>
<li>《父与子》埃·奥·卜劳恩 ★★★★★</li>
<li>《无声告白》伍绮诗 ★★★★★</li>
<li>《侠隐》张北海 ★★★★</li>
<li>《沉睡的人鱼之家》东野圭吾 ★★★</li>
<li>《长夜难明》紫金陈 ★★★★</li>
<li>《永恒的边缘》肯福莱特 ★★★★★</li>
<li>《奇迹男孩》RJ帕拉西奥 ★★★★★</li>
<li>《必须找到阿历克斯》 皮耶尔斯迈特 ★★★★</li>
<li>《小小小小火》伍绮诗 ★★★★★</li>
<li>《绿野仙踪》弗兰克鲍姆 ★★★★★</li>
</ul>
<h2 id="8月"><a href="#8月" class="headerlink" title="8月"></a>8月</h2><ul>
<li>《高兴死了》珍妮罗森 ★★★★</li>
<li>《如父如子》是枝裕和 ★★★★★</li>
<li>《证明》松本清张 ★★★</li>
<li>《上瘾》尼尔埃亚尔 ★★★★</li>
<li>《创业小败局》★★★★</li>
<li>《山茶文具店》小川糸 ★★★★★</li>
<li>《人工智能》李开复 ★★★★</li>
<li>《一个女人的史诗》严歌苓 ★★★★</li>
</ul>
<h2 id="9月"><a href="#9月" class="headerlink" title="9月"></a>9月</h2><ul>
<li>《斗罗大陆》唐家三少 ★★★</li>
<li>《牧羊少年奇幻之旅》保罗柯艾略 ★★★</li>
<li>《围城》钱钟书 ★★★★★</li>
<li>《许三观卖血记》余华 ★★★★</li>
<li>《活着》余华 ★★★★</li>
<li>《半小时漫画中国史》二愣子 ★★★★</li>
<li>《半小时漫画中国史2》二愣子 ★★★★</li>
<li>《半小时漫画中国史3》二愣子 ★★★★</li>
<li>《半小时漫画世界史》二愣子 ★★★★</li>
<li>《在细雨中呐喊》余华 ★★★★</li>
<li>《奥吉和我》RJ帕拉西奥 ★★★★</li>
<li>《金刚经心经》鸠摩罗什 玄奘 ★★★★★</li>
<li>《菩提树下的微笑》蔡志忠 ★★★★</li>
<li>《一禅小和尚》★★★★</li>
<li>《成人如迷》莎拉安徒生 ★★★★</li>
<li>《一个人散步》韩旭君 ★★</li>
<li>《镖人卷一》许先哲 ★★★★</li>
<li>《镖人卷二》许先哲 ★★★★</li>
<li>《我很好啊你怎么样》 莎拉安徒生 ★★★★</li>
<li>《浮生六记》沈复 ★★★★★</li>
<li>《妈妈让我卖茄子》原田刚 ★★★★</li>
<li>《心经解密》蔡志忠 ★★★★</li>
</ul>
<h2 id="10月"><a href="#10月" class="headerlink" title="10月"></a>10月</h2><ul>
<li>《目送》龙应台 ★★★★★</li>
<li>《野火集》龙应台 ★★★★★</li>
<li>《人间便利店》村田沙耶香 ★★★</li>
<li>《早晨型人更易成功》中岛孝志 ★★★</li>
<li>《高效阅读》渡边康弘 ★★★</li>
<li>《刺杀骑士团长》村上春树 ★★★★</li>
<li>《愿无岁月可回头》回忆专用小马甲 ★★★</li>
<li>《我的职业是小说家》村上春树  ★★★★</li>
<li>《人间失格》太宰治 ★★★★</li>
<li>《草房子》曹文轩 ★★★★★</li>
</ul>
<h2 id="11月"><a href="#11月" class="headerlink" title="11月"></a>11月</h2><ul>
<li>《咏远有李》李咏 ★★★★</li>
<li>《射雕英雄传》金庸 ★★★★★</li>
<li>《1984》乔治奥威尔 ★★★★★</li>
<li>《我是猫》夏目漱石 ★★★★★</li>
<li>《未来简史》尤瓦尔赫拉利 ★★★★★</li>
<li>《小王子纯美电影原图珍藏版》安东尼 ★★★★★</li>
<li>《偷影子的人》马克李维 ★★★</li>
<li>《动物农场》乔治奥威尔 ★★★★★</li>
<li>《情人》玛格丽特杜兰特 ★★★★★</li>
<li>《我可以咬一口吗》 利兹克里莫 ★★★★★</li>
<li>《皮囊》蔡崇达 ★★★★</li>
<li>《人性的弱点》戴尔卡耐基 ★★★★</li>
<li>《看见》柴静 ★★★★★</li>
<li>《天才地久：给美君的信》龙应台 ★★★★★</li>
<li>《小狗钱钱》博多舍费尔 ★★★★★</li>
<li>《心经解读》比尔波特 ★★★★★</li>
<li>《亮剑》都梁 ★★★★★</li>
</ul>
<h2 id="12月"><a href="#12月" class="headerlink" title="12月"></a>12月</h2><ul>
<li>《富爸爸穷爸爸》罗伯特清崎 ★★★★★</li>
<li>《我的天才女友》 埃莱娜费兰特 ★★★★★</li>
<li>《新名字的故事》埃莱娜费兰特 ★★★★★</li>
<li>《离开的，留下的》埃莱娜费兰特 ★★★★★</li>
<li>《失踪的孩子》埃莱娜费兰特 ★★★★★</li>
<li>《哈利波特与魔法石纪念版》JK罗琳 ★★★★★</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2018年共看了&lt;/p&gt;
&lt;p&gt;龙应台 5本&lt;br&gt;严歌苓 2本&lt;br&gt;是枝裕和 4本&lt;br&gt;夏目漱石 2本&lt;br&gt;村上春树 2本&lt;br&gt;弗雷德里克·巴克曼 3本&lt;br&gt;肯福莱特 3本&lt;/p&gt;
    
    </summary>
    
      <category term="Reading" scheme="https://16bh.github.io/categories/Reading/"/>
    
    
      <category term="reading" scheme="https://16bh.github.io/tags/reading/"/>
    
  </entry>
  
  <entry>
    <title>hexo blog中怎么插入歌曲</title>
    <link href="https://16bh.github.io/2018/11/12/%20add-music-to-blog/"/>
    <id>https://16bh.github.io/2018/11/12/ add-music-to-blog/</id>
    <published>2018-11-12T03:15:26.000Z</published>
    <updated>2019-01-21T09:04:36.518Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=63738&auto=1&height=66"></iframe>

<a id="more"></a>
<p>如何将音乐添加到文章?</p>
<p><a href="https://music.163.com/#/outchain/2/63738/m/use/html" target="_blank" rel="external">https://music.163.com/#/outchain/2/63738/m/use/html</a></p>
<p>生成外链即可</p>
]]></content>
    
    <summary type="html">
    
      &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=63738&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;
    
    </summary>
    
      <category term="Life" scheme="https://16bh.github.io/categories/Life/"/>
    
    
      <category term="music" scheme="https://16bh.github.io/tags/music/"/>
    
      <category term="hexo" scheme="https://16bh.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记：如何快速阅读</title>
    <link href="https://16bh.github.io/2018/10/17/fast-read-skill/"/>
    <id>https://16bh.github.io/2018/10/17/fast-read-skill/</id>
    <published>2018-10-17T14:42:57.000Z</published>
    <updated>2018-10-17T14:57:45.214Z</updated>
    
    <content type="html"><![CDATA[<p>最近看了一些关于阅读技巧的书，作者本人都是爱读书并且看书贼快的，一天可以看好几本那种。</p>
<p>以下是书单，点击可跳转到对应的豆瓣链接：</p>
<p><a href="https://book.douban.com/subject/27199270/" target="_blank" rel="external">《高效阅读》，[日]渡边康弘</a></p>
<p><a href="https://book.douban.com/subject/26391279/" target="_blank" rel="external">《如何高效阅读》，[美]彼得·孔普</a></p>
<p><a href="https://book.douban.com/subject/27032526/" target="_blank" rel="external">《快速阅读术》，[日]印南敦史</a></p>
<p>总结一下，怎样看书才又快又好呢？</p>
<a id="more"></a>
<p>​    几本书有一个共同的观点，那就是读书不应该逐字逐句的阅读，要扫视、通读。</p>
<p>​    《快速阅读术》举了个例子，人在听音乐的时候，并没有仔细去听每一个音符，最后总能大体get到歌曲要表达的意思。因此，作者提出了名为“流水式”的阅读方法，让文字从你眼前很自然的流过，留下来的就是你掌握了的。</p>
<p>​    《高效阅读》提到用纸笔来辅助阅读，有点麻烦。但是提到了一个“共振阅读法”，阅读的时候想象自己同作者对话，有点意思</p>
<p>​    《如何高效阅读》提到了几点我觉得很有用：</p>
<pre><code>1. 用手指辅助阅读，可以防止回读
2. 避免默读，加快阅读速度，快到你的大脑来不及默读
3. 带着目的去阅读，读这本书想收获什么
4. 最重要的一点，读书不是目的，读完之后的行动才是重点。
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近看了一些关于阅读技巧的书，作者本人都是爱读书并且看书贼快的，一天可以看好几本那种。&lt;/p&gt;
&lt;p&gt;以下是书单，点击可跳转到对应的豆瓣链接：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/27199270/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《高效阅读》，[日]渡边康弘&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/26391279/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《如何高效阅读》，[美]彼得·孔普&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/27032526/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《快速阅读术》，[日]印南敦史&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;总结一下，怎样看书才又快又好呢？&lt;/p&gt;
    
    </summary>
    
      <category term="Reading" scheme="https://16bh.github.io/categories/Reading/"/>
    
    
  </entry>
  
  <entry>
    <title>一款比man更好用的工具：tldr</title>
    <link href="https://16bh.github.io/2018/10/16/a-command-more-powerful-than-man/"/>
    <id>https://16bh.github.io/2018/10/16/a-command-more-powerful-than-man/</id>
    <published>2018-10-16T15:05:10.000Z</published>
    <updated>2018-10-21T11:50:45.017Z</updated>
    
    <content type="html"><![CDATA[<p>感谢duang duang给我介绍的一款实用的小工具:tldr</p>
<p><a href="http://tldr-pages.github.io/" target="_blank" rel="external">tldr的官网介绍</a></p>
<p>tldr = too long don’t read</p>
<p>通常我们碰到一个陌生或很长时间没用过的command命令的时候不会用，会用man来查看这个命令的用法，但是man的介绍太详细了，如下所示：</p>
<a id="more"></a>
<p>以下是截取的一部分命令介绍：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">BSDTAR(1)                 BSD General Commands Manual                BSDTAR(1)</div><div class="line"></div><div class="line">NAME</div><div class="line">     tar -- manipulate tape archives</div><div class="line"></div><div class="line">SYNOPSIS</div><div class="line">     tar [bundled-flags &lt;args&gt;] [&lt;file&gt; | &lt;pattern&gt; ...]</div><div class="line">     tar &#123;-c&#125; [options] [files | directories]</div><div class="line">     tar &#123;-r | -u&#125; -f archive-file [options] [files | directories]</div><div class="line">     tar &#123;-t | -x&#125; [options] [patterns]</div><div class="line"></div><div class="line">DESCRIPTION</div><div class="line">     tar creates and manipulates streaming archive files.  This implementation</div><div class="line">     can extract from tar, pax, cpio, zip, jar, ar, and ISO 9660 cdrom images</div><div class="line">     and can create tar, pax, cpio, ar, and shar archives.</div><div class="line"></div><div class="line">     The first synopsis form shows a ``bundled&apos;&apos; option word.  This usage is</div><div class="line">     provided for compatibility with historical implementations.  See COMPATI-</div><div class="line">     BILITY below for details.</div><div class="line"></div><div class="line">     The other synopsis forms show the preferred usage.  The first option to</div><div class="line">     tar is a mode indicator from the following list:</div><div class="line">     -c      Create a new archive containing the specified items.</div><div class="line">     -r      Like -c, but new entries are appended to the archive.  Note that</div><div class="line">             this only works on uncompressed archives stored in regular files.</div><div class="line">             The -f option is required.</div><div class="line">     -t      List archive contents to stdout.</div><div class="line">     -u      Like -r, but new entries are added only if they have a modifica-</div><div class="line">             tion date newer than the corresponding entry in the archive.</div><div class="line">             Note that this only works on uncompressed archives stored in reg-</div><div class="line">             ular files.  The -f option is required.</div></pre></td></tr></table></figure>
<p>急等着一个命令用的时候，真的是欲仙欲死。</p>
<p>比较一下，用<code>tldr</code>查询<code>tar</code>的结果：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">➜  ~ tldr tar</div><div class="line">Local data is older than two weeks, use --update to update it.</div><div class="line"></div><div class="line"></div><div class="line">tar</div><div class="line"></div><div class="line">Archiving utility.</div><div class="line">Often combined with a compression method, such as gzip or bzip.</div><div class="line"></div><div class="line">- Create an archive from files:</div><div class="line">    tar cf target.tar file1 file2 file3</div><div class="line"></div><div class="line">- Create a gzipped archive:</div><div class="line">    tar czf target.tar.gz file1 file2 file3</div><div class="line"></div><div class="line">- Extract an archive in a target folder:</div><div class="line">    tar xf source.tar -C folder</div><div class="line"></div><div class="line">- Extract a gzipped archive in the current directory:</div><div class="line">    tar xzf source.tar.gz</div><div class="line"></div><div class="line">- Extract a bzipped archive in the current directory:</div><div class="line">    tar xjf source.tar.bz2</div><div class="line"></div><div class="line">- Create a compressed archive, using archive suffix to determine the compression program:</div><div class="line">    tar caf target.tar.xz file1 file2 file3</div><div class="line"></div><div class="line">- List the contents of a tar file:</div><div class="line">    tar tvf source.tar</div><div class="line"></div><div class="line">- Extract files matching a pattern:</div><div class="line">    tar xf source.tar --wildcards "*.html"</div></pre></td></tr></table></figure>
<p>根据示例，立马就知道这个命令的常见用法了。</p>
<p>最后，把tldr设置成man的alias别名，更方便日常的使用</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">alias man="tldr"</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感谢duang duang给我介绍的一款实用的小工具:tldr&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://tldr-pages.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tldr的官网介绍&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tldr = too long don’t read&lt;/p&gt;
&lt;p&gt;通常我们碰到一个陌生或很长时间没用过的command命令的时候不会用，会用man来查看这个命令的用法，但是man的介绍太详细了，如下所示：&lt;/p&gt;
    
    </summary>
    
      <category term="IT" scheme="https://16bh.github.io/categories/IT/"/>
    
    
      <category term="shell" scheme="https://16bh.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>使用jupyter来学习python</title>
    <link href="https://16bh.github.io/2018/10/16/the-best-way-to-learn-python-using-jupyter-notebook/"/>
    <id>https://16bh.github.io/2018/10/16/the-best-way-to-learn-python-using-jupyter-notebook/</id>
    <published>2018-10-16T06:51:07.000Z</published>
    <updated>2018-10-21T11:50:45.088Z</updated>
    
    <content type="html"><![CDATA[<p>之前一直是通过brew安装python的，后面发现有一种更简便的方法，如下:</p>
<p>通过miniconda安装python和jupyter</p>
<p>然后通过jupyter notebook学习python知识</p>
<a id="more"></a>
<h2 id="安装conda、python和jupyter"><a href="#安装conda、python和jupyter" class="headerlink" title="安装conda、python和jupyter"></a>安装conda、python和jupyter</h2><p><a href="https://conda.io/miniconda.html" target="_blank" rel="external">点击进入miniconda下载页面</a></p>
<p>下载miniconda之后，通过<code>conda</code>命令来安装python和jupyter</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">conda install python</div><div class="line">conda install jupyter</div></pre></td></tr></table></figure>
<p>查看是否安装成功</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">➜  ~ conda list|grep python</div><div class="line">condaipython                   6.5.0                    py36_0</div><div class="line">ipython_genutils          0.2.0            py36h241746c_0</div><div class="line">python                    3.6.5                hc167b69_1</div><div class="line">python-dateutil           2.7.3                    py36_0</div><div class="line">python.app                2                        py36_8</div><div class="line">➜  ~ conda list | grep jupyter</div><div class="line">jupyter                   1.0.0                    py36_4</div><div class="line">jupyter_client            5.2.3                    py36_0</div><div class="line">jupyter_console           5.2.0                    py36_1</div><div class="line">jupyter_core</div></pre></td></tr></table></figure>
<p>安装成功了</p>
<h2 id="使用jupyter"><a href="#使用jupyter" class="headerlink" title="使用jupyter"></a>使用jupyter</h2><p>在终端输入以下命令启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jupyter notebook</div></pre></td></tr></table></figure>
<p>启动过程：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">➜  ~ jupyter notebook</div><div class="line">[W 22:27:59.899 NotebookApp] WARNING: The notebook server is listening on all IP addresses and not using encryption. This is not recommended.</div><div class="line">[I 22:27:59.919 NotebookApp] Serving notebooks from local directory: /Users/jimxu/jupyter</div><div class="line">[I 22:27:59.919 NotebookApp] 0 active kernels</div><div class="line">[I 22:27:59.919 NotebookApp] The Jupyter Notebook is running at:</div><div class="line">[I 22:27:59.919 NotebookApp] http://192.168.1.11:8888/</div><div class="line">[I 22:27:59.919 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).</div></pre></td></tr></table></figure>
<p>会直接通过默认浏览器打开本地jupyter服务器页面</p>
<p><img src="/2018/10/16/the-best-way-to-learn-python-using-jupyter-notebook/image-20181016222851648.png" alt="image-20181016222851648"></p>
<p><code>jupyter notebook</code>中默认的文件格式是<code>ipynb</code></p>
<p>刚进入的时候应该只有一个类似helloworld.ipynb的文件,上图中的文件都是我自己新建的</p>
<h2 id="认识ipynb文件"><a href="#认识ipynb文件" class="headerlink" title="认识ipynb文件"></a>认识ipynb文件</h2><p>打开一个ipynb文件，如下图所示</p>
<p><img src="/2018/10/16/the-best-way-to-learn-python-using-jupyter-notebook/image-20181016223011413.png" alt="image-20181016223011413"></p>
<p>文档内容以cell的格式展示，你可以选择cell的样式，jupyter提供以下样式</p>
<ul>
<li>Markdown</li>
<li>Code</li>
<li>Raw NBConvert</li>
<li>Heading</li>
<li>…</li>
</ul>
<p>其中，以Markdown和Code的cell最常用</p>
<p>如果只是这样的话，jupyter只能算是个高级的markdown笔记本了</p>
<p>最神奇的是，<strong>你可以直接在文档中运行cell里的python代码</strong></p>
<p><img src="/2018/10/16/the-best-way-to-learn-python-using-jupyter-notebook/image-20181016223411601.png" alt="image-20181016223411601"></p>
<h2 id="jupyter的配置"><a href="#jupyter的配置" class="headerlink" title="jupyter的配置"></a>jupyter的配置</h2><p>jupyter的配置文件是<code>~/.jupyter/jupyter_notebook_config.py</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前一直是通过brew安装python的，后面发现有一种更简便的方法，如下:&lt;/p&gt;
&lt;p&gt;通过miniconda安装python和jupyter&lt;/p&gt;
&lt;p&gt;然后通过jupyter notebook学习python知识&lt;/p&gt;
    
    </summary>
    
      <category term="Software" scheme="https://16bh.github.io/categories/Software/"/>
    
    
      <category term="jupyter" scheme="https://16bh.github.io/tags/jupyter/"/>
    
      <category term="python" scheme="https://16bh.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>一种酷炫的博客实践方式：hexo+typora</title>
    <link href="https://16bh.github.io/2018/10/15/a-cool-way-to-blog-by-hexo-and-typora/"/>
    <id>https://16bh.github.io/2018/10/15/a-cool-way-to-blog-by-hexo-and-typora/</id>
    <published>2018-10-15T13:14:13.000Z</published>
    <updated>2018-10-21T11:50:45.017Z</updated>
    
    <content type="html"><![CDATA[<p>博客的图片不能上传到七牛云了，也懒得去折腾那些在线的图床了，还是放在本地最安心</p>
<p>最近发现了mac上超好用又免费的一款markdown工具<code>Typora</code>，<code>Typora</code>自带的图片工具可以将本地图片直接复制到md文件中，并放在自定义的路径中，例如与当前md文件同名的文件夹中</p>
<p>这种格式以方便可以被编辑器<code>Typora</code>识别并预览</p>
<p>另一方面刚好也是<code>hexo</code>支持并可以预览的</p>
<p>于是，就产生了一种比较好的博客实践方式，即<code>hexo+typora</code>，详情见正文</p>
<a id="more"></a>
<h2 id="将博客中的图片从七牛云中下载到本地"><a href="#将博客中的图片从七牛云中下载到本地" class="headerlink" title="将博客中的图片从七牛云中下载到本地"></a>将博客中的图片从七牛云中下载到本地</h2><p><a href="https://16bh.github.io/2018/10/15/batch-download-image-from-qiniu/">详见本文</a></p>
<h2 id="配置hexo支持本地图片"><a href="#配置hexo支持本地图片" class="headerlink" title="配置hexo支持本地图片"></a>配置hexo支持本地图片</h2><p>hexo3的一个新特性，是可以支持本地图片</p>
<p>有两种支持方式，参考<a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="external">官方文章</a>：</p>
<h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>直接把图片放到<code>source/images</code>目录下,然后就可以通过<code>images/图片名称</code>的方式来使用图片了</p>
<ol>
<li>也可以放到<code>source/_posts/images</code>目录下，两者的区别在于放soure/images目录中_posts和_drafts里的文章都可以用，放在_posts/images目录只有posts可以用了。一般drafts草稿文件夹用不上，所以区别不大</li>
<li>需要注意的是这种方式只支持一级目录，不能在images文件夹中再建立文件夹了。此时typora虽然可以识别，但是hexo渲染的时候会报错</li>
</ol>
<h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><p>每篇文章都单独建立文件夹存放图片</p>
<p>修改配置文件<code>*.github.io/_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"> <span class="attr">post_asset_folder:</span> <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>这样每次之后，每次新建一篇md博文的时候，都会同时新建一个同名的文件夹用于存储该文章的图片</p>
<h2 id="配置typora"><a href="#配置typora" class="headerlink" title="配置typora"></a>配置typora</h2><p>上述的两种方式typora都支持</p>
<p>对于第2种方法</p>
<p>按如下方式配置<code>typora</code>，这样当你在md文件中插入一张图片的时候，刚好会被<code>typora</code>复制到hexo生成的文件文件夹中</p>
<p><img src="/2018/10/15/a-cool-way-to-blog-by-hexo-and-typora/image-20181015213318141.png" alt="image-20181015213318141"></p>
<p>如上图，我截图并复制到markdown文件中后，就会被自动替换成下面的路径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![image-20181015213318141](a-cool-way-to-blog-by-hexo-and-typora/image-20181015213318141.png)</div></pre></td></tr></table></figure>
<p>其中,<code>a-cool-way-to-blog-by-hexo-and-typora</code>是本文的标题</p>
<p>对于第1种方法</p>
<p>把上面的自定义路径修改为<code>./images</code>即可</p>
<h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><p>有一篇文章指出的一点我觉得很好</p>
<p>图片能省则省，不要滥用图片，占用空间</p>
<p>其他关于hexo的使用，请参考以下文章：<a href="https://16bh.github.io/tags/hexo">hexo系列</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;博客的图片不能上传到七牛云了，也懒得去折腾那些在线的图床了，还是放在本地最安心&lt;/p&gt;
&lt;p&gt;最近发现了mac上超好用又免费的一款markdown工具&lt;code&gt;Typora&lt;/code&gt;，&lt;code&gt;Typora&lt;/code&gt;自带的图片工具可以将本地图片直接复制到md文件中，并放在自定义的路径中，例如与当前md文件同名的文件夹中&lt;/p&gt;
&lt;p&gt;这种格式以方便可以被编辑器&lt;code&gt;Typora&lt;/code&gt;识别并预览&lt;/p&gt;
&lt;p&gt;另一方面刚好也是&lt;code&gt;hexo&lt;/code&gt;支持并可以预览的&lt;/p&gt;
&lt;p&gt;于是，就产生了一种比较好的博客实践方式，即&lt;code&gt;hexo+typora&lt;/code&gt;，详情见正文&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://16bh.github.io/categories/Blog/"/>
    
    
      <category term="hexo" scheme="https://16bh.github.io/tags/hexo/"/>
    
      <category term="typora" scheme="https://16bh.github.io/tags/typora/"/>
    
  </entry>
  
  <entry>
    <title>七牛测试域名过期后批量下载图片到本地</title>
    <link href="https://16bh.github.io/2018/10/15/batch-download-image-from-qiniu/"/>
    <id>https://16bh.github.io/2018/10/15/batch-download-image-from-qiniu/</id>
    <published>2018-10-15T07:24:04.000Z</published>
    <updated>2018-10-21T11:50:45.020Z</updated>
    
    <content type="html"><![CDATA[<p>收到邮件，七牛云的测试域名过期了，之前都是免费试用的，看来七牛是发现太多人在白嫖了</p>
<p>博客的图片都是上传到七牛云的域名的</p>
<p>需要迁移出来</p>
<a id="more"></a>
<p><img src="/2018/10/15/batch-download-image-from-qiniu/image-20181015153427041.png" alt="image-20181015153427041"></p>
<p>在网上查询了一下，七牛云的网站上是不支持直接下载所有的图片的，需要借助他们的<code>qshel</code>l工具来批量下载图片</p>
<p>文档在此：</p>
<blockquote>
<p><a href="https://developer.qiniu.com/kodo/tools/1302/qshell" target="_blank" rel="external">https://developer.qiniu.com/kodo/tools/1302/qshell</a></p>
</blockquote>
<p><img src="/2018/10/15/batch-download-image-from-qiniu/image-20181015181253444.png" alt="image-20181015181253444"></p>
<p>下载后解压，包含以下文件</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"> jim@jims-mac-mini.local  /Users/jim/Downloads/qshell-v2.1.8   ll                                                                                                                                                             18:13:40</div><div class="line">total 99824</div><div class="line">drwxr-xr-x@   8 jim  staff      256 Oct 15 18:13 .</div><div class="line">drwx------+ 102 jim  staff     3264 Oct 15 17:45 ..</div><div class="line">-rwxr-xr-x@   1 jim  staff  9119260 Feb  2  2018 qshell-darwin-x64</div><div class="line">-rwxr-xr-x@   1 jim  staff  8021196 Feb  4  2018 qshell-linux-arm</div><div class="line">-rwxr-xr-x@   1 jim  staff  9215268 Feb  2  2018 qshell-linux-x64</div><div class="line">-rwxr-xr-x@   1 jim  staff  7893862 Feb  2  2018 qshell-linux-x86</div><div class="line">-rwxr-xr-x@   1 jim  staff  9057792 Feb  2  2018 qshell-windows-x64.exe</div><div class="line">-rwxr-xr-x@   1 jim  staff  7790592 Feb  2  2018 qshell-windows-x86.exe</div></pre></td></tr></table></figure>
<p>我们的系统是mac，所以用其中<code>qshell-darwin-x64</code>命令行就可以了，如果是windows系统可以参考上面的文档页面，有详细的操作</p>
<p>1.根据要求将命令行工具需改名称为qshell，并修改权限</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp qshell-darwin-x64 qshell</div><div class="line">chmod +x qshell</div></pre></td></tr></table></figure>
<ol>
<li><p>登录七牛账号，其中AccessKey和SecretKey可以在你的七牛云网站中查到，不赘述</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./qshell &#123;AccessKey&#125; &#123;SecretKey&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>可以用<code>buckets</code>和<code>domins</code>命令查看bucket和domin</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> jim@jims-mac-mini.local  /Users/jim/Downloads/qshell-v2.1.8   ./qshell buckets                                                                                                                                               17:39:51</div><div class="line">2018/10/15 17:39:53 [I] Load account from /Users/jim/.qshell/account.json</div><div class="line">j***u</div><div class="line"></div><div class="line"> jim@jims-mac-mini.local  /Users/jim/Downloads/qshell-v2.1.8   ./qshell domains j***u                                                                                                                                        17:40:09</div><div class="line">2018/10/15 17:40:13 [I] Load account from /Users/jim/.qshell/account.json</div><div class="line">***.bkt.clouddn.com</div></pre></td></tr></table></figure>
<p>其中，bucket对应的就是我们的存储空间，也即我们需要下载图片的地方</p>
</li>
<li><p>创建爱你下载配置并下载</p>
<p>我们通过<code>qdownload</code>命令来下载，<a href="https://github.com/qiniu/qshell/blob/master/docs/qdownload.md" target="_blank" rel="external">该命令的详细用法</a></p>
<p>大概的思路就是创建一个下载配置文件<code>qdisk_down.conf</code>，然后指定qdownload命令通过这个配置下载就ok了</p>
</li>
</ol>
<p>随便找个地方创建这个文件，编辑如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">	&quot;dest_dir&quot;	:	&quot;/Users/***/qiniu&quot;,</div><div class="line">	&quot;bucket&quot;	:	&quot;j***u&quot;,</div><div class="line">	&quot;cdn_domain&quot;    :      &quot;***.bkt.clouddn.com&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这里的bucket和cdn_domain就是我们上面查询得到的玩意儿了</p>
<p>dset_dir是你指定下载的目录，其它的用默认配置就ojbk了</p>
<p>最后运行</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qshell qdownload 10 qdisk_down.conf</div></pre></td></tr></table></figure>
<p>搞定了</p>
<p><img src="/2018/10/15/batch-download-image-from-qiniu/wanmei.jpg" alt=""></p>
<hr>
<p>ps，如果用的blog是hexo框架的</p>
<p>那么，把下载的图片文件夹重命名为assets，copy到<code>16bh.github.io/source/_posts</code>目录，然后找个编辑器批量替换_posts中所有的图片地址，将七牛的前缀修改为assets就ok啦</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;收到邮件，七牛云的测试域名过期了，之前都是免费试用的，看来七牛是发现太多人在白嫖了&lt;/p&gt;
&lt;p&gt;博客的图片都是上传到七牛云的域名的&lt;/p&gt;
&lt;p&gt;需要迁移出来&lt;/p&gt;
    
    </summary>
    
      <category term="Software" scheme="https://16bh.github.io/categories/Software/"/>
    
    
      <category term="hexo" scheme="https://16bh.github.io/tags/hexo/"/>
    
      <category term="qiniu" scheme="https://16bh.github.io/tags/qiniu/"/>
    
  </entry>
  
  <entry>
    <title>博客域名切回github</title>
    <link href="https://16bh.github.io/2018/10/10/change-back-to-github-io-domin/"/>
    <id>https://16bh.github.io/2018/10/10/change-back-to-github-io-domin/</id>
    <published>2018-10-10T03:39:27.000Z</published>
    <updated>2018-10-21T11:50:45.023Z</updated>
    
    <content type="html"><![CDATA[<p>域名过期，换回原来的github的域名<br>但是访问<code>16bh.github.io</code>仍然跳转到原来配置的域名。</p>
<a id="more"></a>
<p>解决方案：<br>删除source文件夹下的CNAME文件里配置的域名</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;域名过期，换回原来的github的域名&lt;br&gt;但是访问&lt;code&gt;16bh.github.io&lt;/code&gt;仍然跳转到原来配置的域名。&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://16bh.github.io/categories/Blog/"/>
    
    
      <category term="hexo" scheme="https://16bh.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>如何在Mac上安装Windows</title>
    <link href="https://16bh.github.io/2018/05/28/how-to-install-windows-on-mac/"/>
    <id>https://16bh.github.io/2018/05/28/how-to-install-windows-on-mac/</id>
    <published>2018-05-28T10:34:20.000Z</published>
    <updated>2018-10-21T11:50:45.045Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://support.apple.com/zh-cn/HT201468" target="_blank" rel="external">如何在 Mac 上通过“启动转换”安装 Windows</a></p>
<a id="more"></a>
<p>1.准备一个U盘，插到电脑上</p>
<blockquote>
<p>U盘会被格式化</p>
</blockquote>
<p>2.<a href="https://www.microsoft.com/zh-cn/software-download/windows10ISO" target="_blank" rel="external">下载Windows镜像文件</a>，</p>
<p>选择版本<br><img src="/2018/05/28/how-to-install-windows-on-mac/20180528152750396397606.png" alt="20180528152750396397606.png"></p>
<p>选择语言<br><img src="/2018/05/28/how-to-install-windows-on-mac/20180528152750398228115.png" alt="20180528152750398228115.png"></p>
<p>选择64位<br><img src="/2018/05/28/how-to-install-windows-on-mac/20180528152750399827466.png" alt="20180528152750399827466.png"></p>
<p>3.运行MAC自带的软件 Boot Camp 助理</p>
<blockquote>
<p>软件在应用程序的实用工具里</p>
</blockquote>
<p>3.1 打开助手界面,点继续</p>
<p><img src="/2018/05/28/how-to-install-windows-on-mac/20180528152750534878018.png" alt="20180528152750534878018.png"></p>
<p>3.2 选择任务，如果不需要</p>
<p><img src="/2018/05/28/how-to-install-windows-on-mac/20180528152750540313772.png" alt="20180528152750540313772.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://support.apple.com/zh-cn/HT201468&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何在 Mac 上通过“启动转换”安装 Windows&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Software" scheme="https://16bh.github.io/categories/Software/"/>
    
    
      <category term="mac" scheme="https://16bh.github.io/tags/mac/"/>
    
      <category term="windows" scheme="https://16bh.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>phpstorm可编辑的Rest客户端</title>
    <link href="https://16bh.github.io/2018/05/07/phpstorm-editor-based-Rest-Client/"/>
    <id>https://16bh.github.io/2018/05/07/phpstorm-editor-based-Rest-Client/</id>
    <published>2018-05-07T09:51:59.000Z</published>
    <updated>2018-10-21T11:50:45.074Z</updated>
    
    <content type="html"><![CDATA[<p>看了一篇文章<a href="https://toutiao.io/k/6tokkp" target="_blank" rel="external">快速测试 API 接口的新技能</a>,说的是IDEA自带了Rest客户端，可以模拟接口请求<br>我就看看phpstorm能不能用的上</p>
<p>结果当然用的上啦n(<em>≧▽≦</em>)n</p>
<p>基本上，postman能实现的功能这里都可以搞定</p>
<a id="more"></a>
<h2 id="版本支持"><a href="#版本支持" class="headerlink" title="版本支持"></a>版本支持</h2><p>新建了个.http文件，发现根本识别不了</p>
<p>丫的，原来我的正版phpstorm还是2017.3的版本，速度升级到最新版，然后就支持了，bingo!</p>
<h2 id="建一个api试试"><a href="#建一个api试试" class="headerlink" title="建一个api试试"></a>建一个api试试</h2><p>在新建的http文件中编辑如下一个api，注意起始一行一定要用<code>###</code>打头</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">###</div><div class="line">GET localhost/api/test/index</div><div class="line">Accept : application/json</div><div class="line">Content-Type: application/json;charset=UTF-8</div><div class="line">Authorization:</div><div class="line">Cookie:</div></pre></td></tr></table></figure>
<p><img src="/2018/05/07/phpstorm-editor-based-Rest-Client/image-20181016221550175.png" alt="image-20181016221550175"></p>
<p>点击api左边的绿色三角，就可以模拟这个api了</p>
<h2 id="post请求"><a href="#post请求" class="headerlink" title="post请求"></a>post请求</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">###</div><div class="line">POST localhost/api/test/index</div><div class="line">Accept : application/json</div><div class="line">Content-Type: application/json;charset=UTF-8</div><div class="line">Authorization:</div><div class="line">Cookie:</div><div class="line"></div><div class="line">&#123;</div><div class="line">"a":1,</div><div class="line">"b":2,</div><div class="line">"c":"hello world"</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="能不能支持xdebug呢？"><a href="#能不能支持xdebug呢？" class="headerlink" title="能不能支持xdebug呢？"></a>能不能支持xdebug呢？</h2><p>google的app版本的Postman刚开始也支持不了xdebug，后来在同事的指点下，发现在cookie里加入以下内容就可以了</p>
<blockquote>
<p>XDEBUG_SESSION=PHPSTORM;</p>
</blockquote>
<p>在这里应该也可以，编辑以下请求：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">### test</div><div class="line">GET localhost/api/test/index</div><div class="line">Accept : application/json</div><div class="line">Content-Type: application/json;charset=UTF-8</div><div class="line">Authorization:</div><div class="line">Cookie: XDEBUG_SESSION=PHPSTORM</div></pre></td></tr></table></figure>
<p>开启phpstorm的xdebug功能，果然成功了！</p>
<h2 id="支持多环境"><a href="#支持多环境" class="headerlink" title="支持多环境"></a>支持多环境</h2><p>新建一个rest-client.env.json</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"dev"</span>: &#123;</div><div class="line">      <span class="attr">"host"</span>:<span class="string">""</span>,</div><div class="line">      <span class="attr">"Accept"</span>:<span class="string">"application/json"</span>,</div><div class="line">      <span class="attr">"Content-Type"</span>:<span class="string">"application/json;charset=UTF-8"</span>,</div><div class="line">      <span class="attr">"Cookie"</span>:<span class="string">"XDEBUG_SESSION=PHPSTORM"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"test"</span>:&#123;</div><div class="line">      <span class="attr">"host"</span>:<span class="string">""</span>,</div><div class="line">      <span class="attr">"Accept"</span>:<span class="string">""</span>,</div><div class="line">      <span class="attr">"Content-Type"</span>:<span class="string">""</span>,</div><div class="line">      <span class="attr">"Cookie"</span>:<span class="string">""</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"prod"</span>:&#123;</div><div class="line">      <span class="attr">"host"</span>:<span class="string">""</span>,</div><div class="line">      <span class="attr">"Accept"</span>:<span class="string">""</span>,</div><div class="line">      <span class="attr">"Content-Type"</span>:<span class="string">""</span>,</div><div class="line">      <span class="attr">"Cookie"</span>:<span class="string">""</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>上面的api可以改写成：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">### test</div><div class="line">GET &#123;&#123;host&#125;&#125;/api/test/index</div><div class="line">Accept : &#123;&#123;Accept&#125;&#125;</div><div class="line">Content-Type: &#123;&#123;Content_Type&#125;&#125;</div><div class="line">Authorization:</div><div class="line">Cookie: &#123;&#123;Cookie&#125;&#125;</div></pre></td></tr></table></figure>
<p>此时，点运行的时候，就会让你选择环境来运行了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看了一篇文章&lt;a href=&quot;https://toutiao.io/k/6tokkp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;快速测试 API 接口的新技能&lt;/a&gt;,说的是IDEA自带了Rest客户端，可以模拟接口请求&lt;br&gt;我就看看phpstorm能不能用的上&lt;/p&gt;
&lt;p&gt;结果当然用的上啦n(&lt;em&gt;≧▽≦&lt;/em&gt;)n&lt;/p&gt;
&lt;p&gt;基本上，postman能实现的功能这里都可以搞定&lt;/p&gt;
    
    </summary>
    
      <category term="Software" scheme="https://16bh.github.io/categories/Software/"/>
    
    
      <category term="phpstorm" scheme="https://16bh.github.io/tags/phpstorm/"/>
    
      <category term="api" scheme="https://16bh.github.io/tags/api/"/>
    
  </entry>
  
  <entry>
    <title>使用pecl终端命令安装php扩展</title>
    <link href="https://16bh.github.io/2018/04/27/brew-php-7-0-and-pecl-install-php-extension/"/>
    <id>https://16bh.github.io/2018/04/27/brew-php-7-0-and-pecl-install-php-extension/</id>
    <published>2018-04-27T06:28:17.000Z</published>
    <updated>2018-10-21T11:50:45.021Z</updated>
    
    <content type="html"><![CDATA[<p>brew不支持php70扩展的安装了，改用pecl</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">➜  conf.d brew search php70</div><div class="line">==&gt; Searching local taps...</div><div class="line">==&gt; Searching taps on GitHub...</div><div class="line">==&gt; Searching blacklisted, migrated and deleted formulae...</div><div class="line">It was migrated from josegonzalez/php to homebrew/core.</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="安装PHP-7-0"><a href="#安装PHP-7-0" class="headerlink" title="安装PHP@7.0"></a>安装PHP@7.0</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install php@7.0</div></pre></td></tr></table></figure>
<p>安装完要配置环境变量,加入<code>.zshrc</code>文件</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export PATH="$(brew --prefix php@7.0)/sbin:$PATH"</div><div class="line">export PATH="/usr/local/bin:/usr/local/sbin:$PATH"</div></pre></td></tr></table></figure>
<p>启动关闭的命令也变了</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//启动php-fpm</div><div class="line">sudo php-fpm</div><div class="line"></div><div class="line">//关闭php-fpm</div><div class="line">sudo pkill php-fpm</div></pre></td></tr></table></figure>
<h2 id="安装pear"><a href="#安装pear" class="headerlink" title="安装pear"></a>安装pear</h2><p>参考一下的教程，安装pear，安装完之后就可以使用pecl命令安装管理php扩展了</p>
<p><a href="https://www.jianshu.com/p/598c0fd84719" target="_blank" rel="external">在Mac上安装pecl</a></p>
<h2 id="pecl命令"><a href="#pecl命令" class="headerlink" title="pecl命令"></a>pecl命令</h2><ul>
<li>pecl search xxxx 查找扩展</li>
<li>pecl install xxxx 安装扩展</li>
<li>pecl list xxxx  查看已安装扩展列表</li>
</ul>
<h2 id="扩展的配置"><a href="#扩展的配置" class="headerlink" title="扩展的配置"></a>扩展的配置</h2><p>以前brew安装php70的扩展都是放在conf.d文件夹下的，而现在php@7.0的扩展安装完之后之前会自动在<code>php.ini</code>文件中开启</p>
<p>以protobuf扩展为例，我们通过<code>pecl install protobuf</code>安装完成之后,在终端日志最后可以看到以下内容</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Build process completed successfully</div><div class="line">Installing '/usr/local/Cellar/php@7.0/7.0.29_1/pecl/20151012/protobuf.so'</div><div class="line">install ok: channel://pecl.php.net/protobuf-3.5.1.1</div><div class="line">Extension protobuf enabled in php.ini</div></pre></td></tr></table></figure>
<p><code>/usr/local/Cellar/php@7.0/7.0.29_1/pecl/20151012/protobuf.so</code>是扩展所在的目录</p>
<p>打开<code>php.ini</code>文件,<br>第一行新增了</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">extension</span>=<span class="string">"protobuf.so"</span></div></pre></td></tr></table></figure>
<p>将其注释掉</p>
<p>在conf.d目录下新建文件<code>ext-protobuf.ini</code>，编辑如下：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="section">[protobuf]</span></div><div class="line"><span class="attr">extension</span>=<span class="string">"/usr/local/Cellar/php@7.0/7.0.29_1/pecl/20151012/protobuf.so"</span></div></pre></td></tr></table></figure>
<h2 id="php的配置"><a href="#php的配置" class="headerlink" title="php的配置"></a>php的配置</h2><p>brew安装的php70时，php.ini文件是不生效的<br>但是brew安装php@7.0，php.ini文件是生效的</p>
<h3 id="obcache"><a href="#obcache" class="headerlink" title="obcache"></a>obcache</h3><p>默认打开了obcache，影响本地测试，需要关闭</p>
<p>修改php.ini</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[opcache]</div><div class="line">; Determines if Zend OPCache is enabled</div><div class="line">opcache.enable=0</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;brew不支持php70扩展的安装了，改用pecl&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;➜  conf.d brew search php70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;==&amp;gt; Searching local taps...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;==&amp;gt; Searching taps on GitHub...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;==&amp;gt; Searching blacklisted, migrated and deleted formulae...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;It was migrated from josegonzalez/php to homebrew/core.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="IT" scheme="https://16bh.github.io/categories/IT/"/>
    
    
      <category term="php" scheme="https://16bh.github.io/tags/php/"/>
    
      <category term="pecl" scheme="https://16bh.github.io/tags/pecl/"/>
    
  </entry>
  
  <entry>
    <title>2017阅读总结</title>
    <link href="https://16bh.github.io/2018/03/05/2017-reading-list/"/>
    <id>https://16bh.github.io/2018/03/05/2017-reading-list/</id>
    <published>2018-03-05T11:08:35.000Z</published>
    <updated>2018-10-21T11:50:45.013Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>2017阅读记录</li>
<li>2017阅读关键字</li>
<li>推荐阅读top10</li>
</ol>
<a id="more"></a>
<h2 id="2017阅读记录"><a href="#2017阅读记录" class="headerlink" title="2017阅读记录"></a>2017阅读记录</h2><p>❏ 风雨平生</p>
<p>❏ 哈利波特8</p>
<p>❏ 浪潮之巅（下）</p>
<p>❏ 人类简史（下）</p>
<p>❏ 未来简史</p>
<p>❏ 我的职业是小说家</p>
<p>✔ 程序员修炼之道 - 亨特</p>
<blockquote>
<p>作者的水平太高了，只能看懂一部分，光这一部分就受益匪浅了</p>
</blockquote>
<p>✔ 人类简史（上） - 尤瓦尔赫拉利</p>
<blockquote>
<p>推荐，作者很博学，很贴心的引用了很多中国的典故，有趣的人类史</p>
</blockquote>
<p>✔ 第七棵柳树 - 矫健</p>
<blockquote>
<p>有年代感的一本书，微信群里别人送的，还可以，就当了解历史吧，故事发生的背景已经不为年轻人所知了</p>
</blockquote>
<p>✔ 摆渡人 - 克莱尔麦克福尔</p>
<blockquote>
<p>名气很大的一本书，个人觉得名不副实，摆渡人是按照人的梦中情人的样子出现的，然后女主就爱上了她的梦中情人，从此，摆渡人成了她的至爱她的所有，可能因为性别的原因，无法理解这种感情</p>
</blockquote>
<p>✔ 我可以咬一口吗 - 利兹克里莫</p>
<blockquote>
<p>推荐，萌萌哒漫画</p>
</blockquote>
<p>✔ 比特币：一个虚幻而真实的金融世界 - 李钧 长铗</p>
<blockquote>
<p>一般，就当科普的书看了</p>
</blockquote>
<p>✔ 你也是蘑菇吗 - 安定医院郝医生</p>
<blockquote>
<p>挺有意思的一本书，讲述精神病人的小故事</p>
</blockquote>
<p>✔ 世界上的所有童话都是写给大人看的 - 陈湛</p>
<blockquote>
<p>其实还可以，可能是我看的那本排版太差了，好多重复的</p>
</blockquote>
<p>✔ 小姨多鹤 - 严歌苓</p>
<blockquote>
<p>推荐，精彩</p>
</blockquote>
<p>✔ 芳华 - 严歌苓</p>
<blockquote>
<p>推荐，代表作，电影很好看，书比电影还好看</p>
</blockquote>
<p>✔ 第九个寡妇 - 严歌苓</p>
<blockquote>
<p>推荐，通过《芳华》认识的严歌苓，发现其他作品也都很精彩</p>
</blockquote>
<p>✔ 十一字杀人 - 东野圭吾</p>
<blockquote>
<p>一般</p>
</blockquote>
<p>✔ 你今天真好看 - 利兹克里莫</p>
<blockquote>
<p>推荐，很有趣温馨的漫画，看了可以让人开心起来</p>
</blockquote>
<p>✔ 妈妈离婚记 - 毛冷瞪</p>
<blockquote>
<p>推荐，可以给感情生活带来启发的一本书，文笔非常有意思</p>
</blockquote>
<p>✔ 无终仙境 - 天下霸唱</p>
<blockquote>
<p>浪费时间的一本书</p>
</blockquote>
<p>✔ 西游日记 - 今何在</p>
<blockquote>
<p>西游三部曲之二，神作，推荐</p>
</blockquote>
<p>✔ 风雪追击 - 东野圭吾</p>
<blockquote>
<p>滑雪</p>
</blockquote>
<p>✔ 湖畔  - 东野圭吾</p>
<blockquote>
<p>推荐，高质量的一本</p>
</blockquote>
<p>✔ 大型网站技术架构：核心原理与案例分析 - 李智慧</p>
<blockquote>
<p>后端开发必看，深入浅出</p>
</blockquote>
<p>✔ 淘宝技术这十年 - 子柳</p>
<blockquote>
<p>挺好，干货满满</p>
</blockquote>
<p>✔ 阿里巴巴：天下没有难做的生意 - 郑作时</p>
<blockquote>
<p>一般</p>
</blockquote>
<p>✔ 新参者 - 东野圭吾</p>
<blockquote>
<p>新题材，温馨的风格，刚看还好，后面就觉得套路了，强行每个故事都有个煽情的结局，就跟午夜食堂似的，看了开头就知道结尾</p>
</blockquote>
<p>✔ 恋爱的贡多拉 - 东野圭吾</p>
<blockquote>
<p>滑雪</p>
</blockquote>
<p>✔ 恶意 - 东野圭吾</p>
<blockquote>
<p>好看，代表作之一</p>
</blockquote>
<p>✔ 分身 - 东野圭吾</p>
<blockquote>
<p>一般</p>
</blockquote>
<p>✔ 仿徨之刃 - 东野圭吾</p>
<blockquote>
<p>高质量</p>
</blockquote>
<p>✔ 金色的茅草 - 曹文轩</p>
<blockquote>
<p>推荐，非常好的一本童话书，这才叫给成人看的童话</p>
</blockquote>
<p>✔ 创京东：刘强东亲述创业之路</p>
<blockquote>
<p>洗脑作，名不符实，不推荐，被《腾讯做》甩了一万条街，概括成一句话：刘强东讲义气，你好好干不会亏待你</p>
</blockquote>
<p>✔ 放学后 - 东野圭吾</p>
<blockquote>
<p>质量还行</p>
</blockquote>
<p>✔ 时生 - 东野圭吾</p>
<blockquote>
<p>东野煽情作，跟韩寒的《乘风破浪》很类似的一本书，如果看过这部作品就很容易猜到剧情，按照时间顺序，应该是韩寒借鉴了《时生》和《新<br>难兄难弟》吧</p>
</blockquote>
<p>✔ 刑警手记之异案侦缉组 - 风雪如书</p>
<blockquote>
<p>跳过，浪费时间的一本书</p>
</blockquote>
<p>✔ 梦幻花 - 东野圭吾</p>
<blockquote>
<p>一般</p>
</blockquote>
<p>✔ 信 - 东野圭吾</p>
<blockquote>
<p>东野的好书一般都会揭露一些社会问题，比如这本</p>
</blockquote>
<p>✔ 妞妞 - 周国平</p>
<blockquote>
<p>催人泪下，可以看出来周国平对妞妞的感情之深，失去挚爱那种痛彻心扉的感受</p>
</blockquote>
<p>✔ 沉睡的人鱼之家 - 东野圭吾</p>
<blockquote>
<p>一般</p>
</blockquote>
<p>✔ 疾风回旋曲 - 东野圭吾</p>
<blockquote>
<p>滑雪题材你懂的，作者可能一没钱就写这种书，然后就有钱去滑雪了吧</p>
</blockquote>
<p>✔ 岛上书店 - 加布瑞埃拉泽文</p>
<blockquote>
<p>神作，看完立马推荐给身边所有人，太好看了</p>
</blockquote>
<p>✔ 别担心，我会陪你一起老 - 影山直美</p>
<blockquote>
<p>推荐，喜欢猫狗题材的作品，作者养了两只狗狗</p>
</blockquote>
<p>✔ 周鸿祎自述：我的互联网方法论 - 周鸿祎</p>
<blockquote>
<p>推荐，挺好看的一本书，周鸿祎真性情</p>
</blockquote>
<p>✔ 假面饭店 - 东野圭吾</p>
<blockquote>
<p>故事一般，男主女主挺有意思的，适合拍片的一本书</p>
</blockquote>
<p>✔ 人生只有一次，去做自己喜欢的事 - 摩西奶奶</p>
<blockquote>
<p>Derek推荐看的一本书，还阔以，第一次看摩西奶奶的书，老人家的生活方式值得学习</p>
</blockquote>
<p>✔ 拉普拉斯的魔女 - 东野圭吾</p>
<blockquote>
<p>期待很久的一本书，结果一般，东野普通的一本书</p>
</blockquote>
<p>✔ 守夜者 - 法医秦明</p>
<blockquote>
<p>故事还行，文笔一般，不推荐了</p>
</blockquote>
<p>✔ 腾讯传 - 吴晓波</p>
<blockquote>
<p>推荐神作，讲述了腾讯的发家史，比《创京东》好看一万倍</p>
</blockquote>
<p>✔ 就是想看你笑的样子 - 懒兔子</p>
<blockquote>
<p>作者是个自学中医的自学漫画的中年女人，还挺好看的</p>
</blockquote>
<p>✔ 急诊科女超人 - 于莺</p>
<blockquote>
<p>随便看看就好，就是把网红的微博整到一起了，连编辑整理都没有，不走心</p>
</blockquote>
<p>✔ 就喜欢你看不惯我又干不掉我的样子2 - 白茶</p>
<blockquote>
<p>推荐，好玩的宠物题材漫画书，吾皇万岁</p>
</blockquote>
<p>✔ 影响力 - 罗伯特·B.西奥迪尼</p>
<blockquote>
<p>神作，营销必看，了解人性</p>
</blockquote>
<p>✔ 小王子 - 圣埃克苏佩里</p>
<blockquote>
<p>神作，你可以读给孩子听的童话故事</p>
</blockquote>
<p>✔ 虚无的十字架 - 东野圭吾</p>
<blockquote>
<p>质量还不错</p>
</blockquote>
<p>✔ 无人生还 - 阿加莎克里斯蒂</p>
<blockquote>
<p>推荐，阿加莎本格推理代表作，结局有点略牵强</p>
</blockquote>
<p>✔ 无证之罪 - 紫金陈</p>
<blockquote>
<p>故事还行，文笔略差了一点，结局太突兀，可以凑合看看</p>
</blockquote>
<p>✔ 不散的宴席 - 一个工作室</p>
<blockquote>
<p>不推荐</p>
</blockquote>
<p>✔ 东方快车谋杀案 - 阿加莎克里斯蒂</p>
<blockquote>
<p>推荐，阿加莎代表作之一</p>
</blockquote>
<p>✔ 黄金时代 - 王小波</p>
<blockquote>
<p>推荐，王小波作品，看了挺久的一本书，伤痕文学，喜剧的核心是悲剧，为作者的乐观精神打call</p>
</blockquote>
<h2 id="2017阅读关键字"><a href="#2017阅读关键字" class="headerlink" title="2017阅读关键字"></a>2017阅读关键字</h2><p>东野圭吾、严歌苓、阿加莎、侦探、互联网</p>
<h2 id="2017推荐阅读top"><a href="#2017推荐阅读top" class="headerlink" title="2017推荐阅读top"></a>2017推荐阅读top</h2><ul>
<li>岛上书店 [加布瑞埃拉泽文]</li>
<li>影响力 [罗伯特]</li>
<li>腾讯传 [吴晓波]</li>
<li>我的互联网方法论 [周鸿祎]</li>
<li>芳华 [严歌苓]</li>
<li>妞妞 [周国平]</li>
<li>东方快车谋杀案 [阿加莎]</li>
<li>恶意 [东野圭吾]</li>
<li>虚无的十字架 [东野圭吾]</li>
<li>大型网站技术架构 [李智慧]</li>
<li>小姨多鹤 [严歌苓]</li>
<li>陆犯焉识 [严歌苓]</li>
<li>小王子 [安托万]</li>
<li>妈妈离魂记 [毛冷瞪]</li>
<li>就喜欢你看不惯我又干不掉我的样子2 [白茶]</li>
</ul>
<h2 id="kindle资源"><a href="#kindle资源" class="headerlink" title="kindle资源"></a>kindle资源</h2><p><a href="http://www.kindlepush.com/booklist/1515" target="_blank" rel="external">我在kindlepush网站上建了个书单</a>，包含了值得推荐的一些书，可以直接下载，也可以设置后直接推送到你的kindle</p>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;2017阅读记录&lt;/li&gt;
&lt;li&gt;2017阅读关键字&lt;/li&gt;
&lt;li&gt;推荐阅读top10&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Reading" scheme="https://16bh.github.io/categories/Reading/"/>
    
    
  </entry>
  
  <entry>
    <title>charles支持https</title>
    <link href="https://16bh.github.io/2018/03/02/charles-support-https/"/>
    <id>https://16bh.github.io/2018/03/02/charles-support-https/</id>
    <published>2018-03-02T10:19:52.000Z</published>
    <updated>2018-10-21T11:50:45.024Z</updated>
    
    <content type="html"><![CDATA[<p>安装好charles之后，设置以支持https抓包。</p>
<a id="more"></a>
<h2 id="第一步-设置ssl-proxying"><a href="#第一步-设置ssl-proxying" class="headerlink" title="第一步  设置ssl proxying"></a>第一步  设置ssl proxying</h2><p><code>Proxy/SSL Proxying Settings</code></p>
<p><img src="charles-support-https/20180302151998614257750.png" alt="20180302151998614257750.png"></p>
<p>将Host和Port都设置为*，就可以抓取所有的https请求</p>
<p><img src="charles-support-https/20180306152030640030250.png" alt="20180306152030640030250.png"></p>
<h2 id="第二步-安装证书"><a href="#第二步-安装证书" class="headerlink" title="第二步 安装证书"></a>第二步 安装证书</h2><p><code>Help/SSL Proxying/Install Charles Root Certificate</code></p>
<p>点击后，会安装到钥匙串中</p>
<p><img src="charles-support-https/20180302151998634953062.png" alt="20180302151998634953062.png"></p>
<p>在所有项目中搜索<code>charles</code>，选中证书，双击打开，将信任设置为“始终信任”</p>
<p>如果不安装证书，访问https网站时会报错“您的连不是私密连接”</p>
<p><img src="charles-support-https/20180302151998591661934.png" alt="20180302151998591661934.png"></p>
<h2 id="手机抓包"><a href="#手机抓包" class="headerlink" title="手机抓包"></a>手机抓包</h2><p>设置wifi的代理并访问<a href="chls.pro/ssl">chls.pro/ssl</a>下载证书到手机上即可</p>
<blockquote>
<p>tips:在安卓模拟器上也可以抓包</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安装好charles之后，设置以支持https抓包。&lt;/p&gt;
    
    </summary>
    
      <category term="Software" scheme="https://16bh.github.io/categories/Software/"/>
    
    
      <category term="charles" scheme="https://16bh.github.io/tags/charles/"/>
    
  </entry>
  
  <entry>
    <title>用Photos管理你的相册</title>
    <link href="https://16bh.github.io/2018/03/01/how-to-manage-your-photos-with-Photos/"/>
    <id>https://16bh.github.io/2018/03/01/how-to-manage-your-photos-with-Photos/</id>
    <published>2018-03-01T11:47:39.000Z</published>
    <updated>2018-10-21T11:50:45.045Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>从iphone导入照片。</li>
<li>从其他地方导入。</li>
<li>照片的整理。</li>
</ol>
<a id="more"></a>
<h1 id="从iphone导入照片"><a href="#从iphone导入照片" class="headerlink" title="从iphone导入照片"></a>从iphone导入照片</h1><ol>
<li>用数据线连接你的iphone和mac</li>
<li>解锁iphone</li>
<li>打开Photos</li>
<li>左侧设备一栏会出现你的手机，点击后，会出现你手机上所有的照片，上面是已导入的，下面是未导入的新照片，可以选择右上角的<code>导入所有新照片</code>导入全部，也可以勾选想要导入的照片再导入</li>
</ol>
<p><img src="/2018/03/01/how-to-manage-your-photos-with-Photos/20180301151990498860725.png" alt="20180301151990498860725.png"></p>
<p>注意：<br>（1）右上角有个选项叫<code>导入后删除项目</code>，若勾选这一项，会将手机中的照片删掉<br>（2）导入之后，在Photos软件中修改或删除照片，不会影响手机中存储的照片<br>（3）导入的时候可以指定某个相簿，若未指定，则导入到<code>照片</code>中</p>
<h1 id="从其他地方导入"><a href="#从其他地方导入" class="headerlink" title="从其他地方导入"></a>从其他地方导入</h1><p>安卓手机或下载到某个文件夹中的照片也可以导入Photos中<br>选择<code>文件/导入</code>，选择照片存储的文件夹，之后的导入方式跟从iphone中导入完全一致。不需要导入重复的照片，软件会将重复的照片自动识别为已导入的</p>
<p><img src="/2018/03/01/how-to-manage-your-photos-with-Photos/20180301151990534676408.png" alt="20180301151990534676408.png"></p>
<h1 id="照片的整理"><a href="#照片的整理" class="headerlink" title="照片的整理"></a>照片的整理</h1><h2 id="加入相册"><a href="#加入相册" class="headerlink" title="加入相册"></a>加入相册</h2><p>右击某张照片，选择<code>添加到/新建相册（或某个已存在的相册）</code></p>
<p><img src="/2018/03/01/how-to-manage-your-photos-with-Photos/20180301151990548766014.png" alt="20180301151990548766014.png"></p>
<p>之后可以在左侧的<code>相簿/我的相簿</code>中查看</p>
<h2 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h2><p>再带编辑功能，可以进行<code>调整</code>或<code>滤镜</code>或<code>裁剪</code>操作</p>
<p><img src="/2018/03/01/how-to-manage-your-photos-with-Photos/20180301151990563728227.png" alt="20180301151990563728227.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;从iphone导入照片。&lt;/li&gt;
&lt;li&gt;从其他地方导入。&lt;/li&gt;
&lt;li&gt;照片的整理。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Software" scheme="https://16bh.github.io/categories/Software/"/>
    
    
      <category term="photos" scheme="https://16bh.github.io/tags/photos/"/>
    
  </entry>
  
  <entry>
    <title>多台mac之间的数据同步问题</title>
    <link href="https://16bh.github.io/2018/02/28/how-to-sync-data-on-your-macs/"/>
    <id>https://16bh.github.io/2018/02/28/how-to-sync-data-on-your-macs/</id>
    <published>2018-02-28T07:28:11.000Z</published>
    <updated>2018-10-21T11:50:45.046Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>ps:这是我本人比较喜欢的一篇文章,非常实用</p>
</blockquote>
<p>当你在办公室和家里有多台mac时，数据如何保持同步<br>可以做到无缝切换电脑的效果</p>
<p><strong>同步的基本思想是：将常用的配置或文件保存在坚果云中，实现跨设备的同步</strong></p>
<a id="more"></a>
<ul>
<li>笔记同步</li>
<li>文件同步</li>
<li>书签同步</li>
<li>postman同步</li>
<li>密码同步</li>
<li>hosts同步</li>
<li>代码同步</li>
<li>Atom配置同步</li>
<li>粘贴板同步</li>
</ul>
<!--more-->
<h1 id="笔记同步"><a href="#笔记同步" class="headerlink" title="笔记同步"></a>笔记同步</h1><ol>
<li>【推荐】使用mac自带的<code>备忘录</code>记笔记，会自动通过<code>iCloud</code>同步，免费.缺点是不支持markdown和分类</li>
<li>使用<code>Bear</code>订阅功能，通过<code>iCloud</code>同步所有的笔记，收费10元/月</li>
<li>印象笔记，免费版只支持两台设备,目前也支持markdown了</li>
</ol>
<h1 id="文件同步"><a href="#文件同步" class="headerlink" title="文件同步"></a>文件同步</h1><p>使用云盘</p>
<ol>
<li>【推荐】<code>坚果云</code>，免费版一周可以用1G流量</li>
<li><code>Dropbox</code>（可能存在网络问题）</li>
<li><code>百度云盘</code>，无法自动同步，免费版下载速度慢</li>
<li><code>金山快盘</code>，已关闭</li>
</ol>
<h1 id="书签同步"><a href="#书签同步" class="headerlink" title="书签同步"></a>书签同步</h1><p>☆☆☆☆☆</p>
<ol>
<li><p>【推荐】safari</p>
</li>
<li><p>chrome（须登录，可能存在网络问题）</p>
</li>
<li><p>【推荐】基于chrome的homely扩展，结合坚果云的同步功能实现<br>效果预览：<br><img src="/2018/02/28/how-to-sync-data-on-your-macs/image-20181015224104672.png" alt="image-20181015224104672"></p>
</li>
</ol>
<p>实现方式：</p>
<ul>
<li><p>下载homely扩展并安装</p>
</li>
<li><p>配置你的书签页面</p>
</li>
<li>将配置文件导出到坚果云，默认只能导出到Download目录，需要自己拷贝到坚果云文件夹中</li>
<li>同步完成后，在另一台设备中导入配置文件</li>
</ul>
<p>导入导出的入口在:</p>
<p><img src="/2018/02/28/how-to-sync-data-on-your-macs/2018100815389833365849.png" alt=""></p>
<h1 id="postman同步"><a href="#postman同步" class="headerlink" title="postman同步"></a>postman同步</h1><p>postman是模拟api接口请求的工具<br>用相同的账号登录了postman之后，你请求的历史记录和收藏的api都可以自动同步</p>
<h1 id="密码同步"><a href="#密码同步" class="headerlink" title="密码同步"></a>密码同步</h1><ol>
<li><p>【推荐】LastPass，支持软件版和主流的浏览器的插件版</p>
</li>
<li><p>1Password</p>
</li>
<li><p>钥匙串</p>
<blockquote>
<p>2018-10-15：最新的ios12系统钥匙串功能得到了极大的提升</p>
</blockquote>
</li>
</ol>
<h1 id="Hosts同步"><a href="#Hosts同步" class="headerlink" title="Hosts同步"></a>Hosts同步</h1><p>☆☆☆☆☆</p>
<p>SwitchHosts，须手动备份</p>
<p>使用<code>文件/导出</code>功能将hosts文件导出到坚果云</p>
<p><img src="/2018/02/28/how-to-sync-data-on-your-macs/20180301151990353149728.png" alt="20180301151990353149728.png"></p>
<p>注意：只有显示了Dock图标才能看到<code>文件/导出</code>功能<br><img src="/2018/02/28/how-to-sync-data-on-your-macs/20181008153898160195878.png" alt=""><br>另一台电脑直接从坚果云中导入，即可</p>
<h1 id="代码同步"><a href="#代码同步" class="headerlink" title="代码同步"></a>代码同步</h1><p>git或svn</p>
<h1 id="Atom同步"><a href="#Atom同步" class="headerlink" title="Atom同步"></a>Atom同步</h1><p>如果你用的是Atom编辑器,可以下载<code>Sync setting</code>插件对你的插件、设置等进行备份</p>
<p><img src="/2018/02/28/how-to-sync-data-on-your-macs/20180302151996127822958.png" alt="20180302151996127822958.png"></p>
<p>只需要在设置里填写你的Personal Access Token和Gist Id就可以了<br>这两个都在github上申请，获取方式如下：</p>
<p>Personal Access Token：<a href="https://github.com/settings/tokens" target="_blank" rel="external">https://github.com/settings/tokens</a></p>
<p>Gist Id：<a href="https://gist.github.com/" target="_blank" rel="external">https://gist.github.com/</a></p>
<h1 id="粘贴板同步"><a href="#粘贴板同步" class="headerlink" title="粘贴板同步"></a>粘贴板同步</h1><p>需求不大</p>
<p>1.mac的通用剪切板功能可以实现</p>
<ol>
<li>Paste</li>
</ol>
<p><img src="/2018/02/28/how-to-sync-data-on-your-macs/20180302151996169747597.png" alt="20180302151996169747597.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;ps:这是我本人比较喜欢的一篇文章,非常实用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当你在办公室和家里有多台mac时，数据如何保持同步&lt;br&gt;可以做到无缝切换电脑的效果&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同步的基本思想是：将常用的配置或文件保存在坚果云中，实现跨设备的同步&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Software" scheme="https://16bh.github.io/categories/Software/"/>
    
    
      <category term="备份" scheme="https://16bh.github.io/tags/%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>mac无法读取移动硬盘</title>
    <link href="https://16bh.github.io/2018/02/28/mac-can-not-read-mobile-HDD/"/>
    <id>https://16bh.github.io/2018/02/28/mac-can-not-read-mobile-HDD/</id>
    <published>2018-02-28T07:19:56.000Z</published>
    <updated>2018-10-21T11:50:45.055Z</updated>
    
    <content type="html"><![CDATA[<p>提示</p>
<blockquote>
<p>无法识别{你的硬盘名称}，无法找到原身</p>
</blockquote>
<p>原因是无法识别ntfs格式的硬盘</p>
<a id="more"></a>
<p>解决方案：</p>
<ol>
<li><p><a href="https://www.paragon-software.com/home/ntfs-mac/" target="_blank" rel="external">下载<code>Paragon NTFS for Mac</code></a>，该软件是收费的，但是有10天的试用期</p>
</li>
<li><p>打开<code>Paragon NTFS for Mac</code></p>
</li>
<li><p>选中你的硬盘，点击<code>认证</code><br><img src="/2018/02/28/mac-can-not-read-mobile-HDD/20180228151980268888706.png" alt="20180228151980268888706.png"></p>
</li>
<li><p>重启mac后生效</p>
</li>
</ol>
<p>也可以使用其它软件，如<code>Tuxera</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;提示&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无法识别{你的硬盘名称}，无法找到原身&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原因是无法识别ntfs格式的硬盘&lt;/p&gt;
    
    </summary>
    
      <category term="Software" scheme="https://16bh.github.io/categories/Software/"/>
    
    
      <category term="mac" scheme="https://16bh.github.io/tags/mac/"/>
    
      <category term="ntfs" scheme="https://16bh.github.io/tags/ntfs/"/>
    
  </entry>
  
  <entry>
    <title>echo字符串时字符串头部出现空格bug</title>
    <link href="https://16bh.github.io/2018/02/06/auto-add-whitespace-at-the-start-of-string-when-echo/"/>
    <id>https://16bh.github.io/2018/02/06/auto-add-whitespace-at-the-start-of-string-when-echo/</id>
    <published>2018-02-06T10:51:50.000Z</published>
    <updated>2018-10-21T11:50:45.018Z</updated>
    
    <content type="html"><![CDATA[<p>echo字符串时字符串头部出现了未知的空格<br>如果是单纯的展示问题不大<br>但是如果作为接口的返回值，调用方判断字符串时多出的空格就会报错</p>
<a id="more"></a>
<p>以下面的代码为例，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> &lt;?php</div><div class="line"></div><div class="line">echo 2233;</div></pre></td></tr></table></figure>
<p>输出结果为：</p>
<blockquote>
<p>2233</p>
</blockquote>
<p>注意2233前面多了个空格，其实是把php文件的头部<code>&lt;?php</code>之前的空格打印出来了</p>
<p>上面只是个简单的示例，实际情况可能更加复杂：比如use了别的文件或者使用了别的类的方法，那么别的文件头部的字符也会被打印出来</p>
<p>可以通过下面的命令检查项目中所有文件的头部是否有多余的空格</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /project_root</div><div class="line">find . *|xargs grep &quot;^ &lt;?php&quot;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;echo字符串时字符串头部出现了未知的空格&lt;br&gt;如果是单纯的展示问题不大&lt;br&gt;但是如果作为接口的返回值，调用方判断字符串时多出的空格就会报错&lt;/p&gt;
    
    </summary>
    
      <category term="IT" scheme="https://16bh.github.io/categories/IT/"/>
    
    
      <category term="php" scheme="https://16bh.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>jupyter support php</title>
    <link href="https://16bh.github.io/2017/11/20/jupyter-support-php/"/>
    <id>https://16bh.github.io/2017/11/20/jupyter-support-php/</id>
    <published>2017-11-20T08:28:48.000Z</published>
    <updated>2018-10-21T11:50:45.053Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>ignore: not used now</p>
</blockquote>
<p>As we know, jupyter support python originally. It can also support other language like php.U need to install specific kenerl.</p>
<a id="more"></a>
<h2 id="envirenement"><a href="#envirenement" class="headerlink" title="envirenement"></a>envirenement</h2><ul>
<li>php7</li>
<li>zeromq</li>
<li>php-zmq</li>
<li>jupyter</li>
<li>composer</li>
</ul>
<blockquote>
<p>just run <code>brew install zeromq</code> to install zeromq on mac</p>
<p>php7.0 don’t support php-zmq,must upgrade to php7.1,then <code>brew install php71-zmq</code></p>
</blockquote>
<h2 id="install-jupyter-PHP"><a href="#install-jupyter-PHP" class="headerlink" title="install jupyter-PHP"></a>install jupyter-PHP</h2><p>download here <a href="https://litipk.github.io/Jupyter-PHP-Installer/" target="_blank" rel="external">https://litipk.github.io/Jupyter-PHP-Installer/</a></p>
<h2 id="notice"><a href="#notice" class="headerlink" title="notice"></a>notice</h2><p>while installing, if you see error below:</p>
<p>You are running PHP-CLI with xdebug enabled. This will have a major impact on the kernel’s performance.</p>
<p>it means that you have’t install zeromq</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;ignore: not used now&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As we know, jupyter support python originally. It can also support other language like php.U need to install specific kenerl.&lt;/p&gt;
    
    </summary>
    
      <category term="Software" scheme="https://16bh.github.io/categories/Software/"/>
    
    
      <category term="php" scheme="https://16bh.github.io/tags/php/"/>
    
      <category term="jupyter" scheme="https://16bh.github.io/tags/jupyter/"/>
    
  </entry>
  
</feed>
