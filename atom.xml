<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>凡·间</title>
  <subtitle>这一切都是命运石之门的选择！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jimxu.me/"/>
  <updated>2017-11-02T09:27:48.000Z</updated>
  <id>http://jimxu.me/</id>
  
  <author>
    <name>小凡</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mtr-1000x-change-device</title>
    <link href="http://jimxu.me/2017/11/02/mtr-1000x-change-device/"/>
    <id>http://jimxu.me/2017/11/02/mtr-1000x-change-device/</id>
    <published>2017-11-02T09:24:10.000Z</published>
    <updated>2017-11-02T09:27:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>mtr 1000x已经跟一台设备的蓝牙匹配了，如何跟另一台设备匹配</p>
<a id="more"></a>
<p>按住开关键7秒，直至蓝光和红光交替闪烁，此时可以在另一台设备的蓝牙列表中找到<code>MDR-1000X</code>，点击配对即可</p>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/20171102150961479925904.png" alt="20171102150961479925904.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mtr 1000x已经跟一台设备的蓝牙匹配了，如何跟另一台设备匹配&lt;/p&gt;
    
    </summary>
    
    
      <category term="mtr1000x" scheme="http://jimxu.me/tags/mtr1000x/"/>
    
  </entry>
  
  <entry>
    <title>互联网思考</title>
    <link href="http://jimxu.me/2017/10/18/BATJ/"/>
    <id>http://jimxu.me/2017/10/18/BATJ/</id>
    <published>2017-10-18T06:36:42.000Z</published>
    <updated>2017-11-02T03:43:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近刚看了《腾讯传》、《淘宝技术这十年》、《创京东》、《阿里巴巴：天下没有难做的生意》、《浪潮之巅》，记一点读后感。</p>
<a id="more"></a>
<p>百度、阿里、腾讯、京东都属于目前站在浪潮之巅的大公司</p>
<h1 id="对公司的概述"><a href="#对公司的概述" class="headerlink" title="对公司的概述"></a>对公司的概述</h1><h2 id="baidu"><a href="#baidu" class="headerlink" title="baidu"></a>baidu</h2><p>百度搜索<br>贴吧<br>百度云<br>收购了www.hao123.com</p>
<h2 id="alibaba"><a href="#alibaba" class="headerlink" title="alibaba"></a>alibaba</h2><p>B2B 阿里巴巴<br>C2C 淘宝<br>支付宝<br>阿里云</p>
<h2 id="tencent"><a href="#tencent" class="headerlink" title="tencent"></a>tencent</h2><p>短信业务起家</p>
<p>代表作：<br>QQ<br>微信<br>游戏</p>
<h2 id="jd"><a href="#jd" class="headerlink" title="jd"></a>jd</h2><p>之前的域名是www.360buy.com 京东商城 后更名为京东<br>以3C起家，后涉足家电、日百、图书等领域<br>耗费巨资建仓</p>
<h1 id="从搜索、社交、电商、云、金融等方面对它们进行一些对比。"><a href="#从搜索、社交、电商、云、金融等方面对它们进行一些对比。" class="headerlink" title="从搜索、社交、电商、云、金融等方面对它们进行一些对比。"></a>从搜索、社交、电商、云、金融等方面对它们进行一些对比。</h1><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p><img src="http://tupian.search1990.com/201709041657.png"></p>
<p>百度：目前的老大，一方面是入行早，另一方面也是政策好。<br>负面新闻最多的大公司</p>
<p>阿里：收购雅虎中国</p>
<h2 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h2><p>互联网时代 - 腾讯的QQ<br>移动互联网时代  - 腾讯的微信</p>
<p>之前百度的贴吧抓住机会或可一战，现在嘛。。</p>
<p>京东跟腾讯有合作，在合并了腾讯的电商部门之后达成协议，可以通过微信和QQ推广自己的商城，所以跟淘宝不一样京东里的商品是可以分享到扣扣微信的</p>
<p>短信是腾讯公司赚的第一桶金，qq秀以及之后的各种钻是腾讯的第二通金</p>
<p>QQ软件以及QQ秀等都是参考了国外的案例，如QQ的前身QICQ参考了ICQ，QQ秀参考了韩国的avatar模式</p>
<p>在腾讯的微信以红包为契机开始介入支付之后，支付宝也赌气似的推出了社交功能，然而聊胜于无</p>
<p>有了QQ为何还要微信呢？微信是移动互联网时代的产物，是腾讯既QQ之后第二支柱，不可动摇的根本，以微信为跳板介入了金融行业，从阿里的支付宝手里抢走了不小的一块蛋糕</p>
<h2 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h2><p>腾讯基于社交的巨大优势为游戏开辟道路</p>
<p>网页游戏 - 偷菜<br>pc游戏 - 英雄联盟（一开始是代理，之后收购了拳头公司）<br>手游 - 王者荣耀<br>均为现象级的游戏</p>
<h2 id="电商"><a href="#电商" class="headerlink" title="电商"></a>电商</h2><p>阿里 - 淘宝、天猫<br>腾讯 - 拍拍（已经被京东收购）<br>京东 - 京东商城</p>
<p>按理说有了淘宝之后，用户购买商品十分的方面，应该不会出现竞品壮大的情形<br>京东和淘宝的定位不一致，面向对象是中高端用户，提供正品行货，211限时达以及良好的售后的服务</p>
<p>正因为有对正品和高质量商品的追求，才会出现像京东、唯品会这样的平台</p>
<h2 id="云"><a href="#云" class="headerlink" title="云"></a>云</h2><p>BAT都有云，阿里云用的人最多，百度的最少，京东压根还没开始弄这块</p>
<h2 id="金融"><a href="#金融" class="headerlink" title="金融"></a>金融</h2><p>支付宝、蚂蚁金融<br>微信支付<br>京东金融</p>
<p>京东一开始不重视，觉得线上支付就ok，进入金融领域较晚，但是蒸蒸日上，率先推出了京东白条</p>
<p>百度。。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol>
<li>小公司如何面对寡头公司</li>
</ol>
<p>绝不做腾讯可以盯上的行业，一旦被腾讯盯上了，就会利用自身的资本和用户优势打垮你。 - 《腾讯传》</p>
<ol>
<li>联通免流卡</li>
</ol>
<p>以腾讯免流卡为例，当用户比例过高的时候，绑架用户使用app的习惯，本来使用的高德地图要换成腾讯地图，网易云播放器要换成QQ音乐，更不要说那些小公司出品的软件了</p>
<h1 id="BATJ共同点"><a href="#BATJ共同点" class="headerlink" title="BATJ共同点"></a>BATJ共同点</h1><ul>
<li>创始人是灵魂人物</li>
<li>经历残酷的战斗</li>
</ul>
<p>它们的对手有：</p>
<table>
<thead>
<tr>
<th>公司</th>
<th>竞争对手</th>
<th>战况</th>
</tr>
</thead>
<tbody>
<tr>
<td>阿里</td>
<td>ebay易趣</td>
<td>胜</td>
</tr>
<tr>
<td>腾讯</td>
<td>微软msn</td>
<td>胜</td>
</tr>
<tr>
<td>腾讯</td>
<td>360</td>
<td>惨胜</td>
</tr>
<tr>
<td>百度</td>
<td>谷歌</td>
<td>胜，后者离开中国</td>
</tr>
<tr>
<td>京东</td>
<td>新蛋</td>
<td>胜</td>
</tr>
<tr>
<td>京东</td>
<td>当当、亚马逊</td>
<td>胜</td>
</tr>
<tr>
<td>京东</td>
<td>拍拍</td>
<td>胜，后者被收购</td>
</tr>
<tr>
<td>京东</td>
<td>淘宝</td>
<td>未知</td>
</tr>
</tbody>
</table>
<h2 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h2><p>阿里和京东的业务严重重合，难免要开战<br>京东在收购腾讯的拍拍网时与腾讯签订了战略合作计划<br>可以猜测将来京东和腾讯对阿里进行围攻，电商已经是被腾讯放弃的部门，在这个领域借助京东的力量怼阿里，赢了是意外的收获，输了也毫发无伤</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近刚看了《腾讯传》、《淘宝技术这十年》、《创京东》、《阿里巴巴：天下没有难做的生意》、《浪潮之巅》，记一点读后感。&lt;/p&gt;
    
    </summary>
    
    
      <category term="reading" scheme="http://jimxu.me/tags/reading/"/>
    
  </entry>
  
  <entry>
    <title>养猫手册</title>
    <link href="http://jimxu.me/2017/10/18/how-to-keep-a-cat/"/>
    <id>http://jimxu.me/2017/10/18/how-to-keep-a-cat/</id>
    <published>2017-10-18T03:35:28.000Z</published>
    <updated>2017-11-02T03:43:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>从楼下捡了一只小猫，记录下养猫心得</p>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/20171018150829785129635.png" width="492" height="297"></p>
<a id="more"></a>
<h2 id="检查与隔离"><a href="#检查与隔离" class="headerlink" title="检查与隔离"></a>检查与隔离</h2><p>刚捡回来的小猫需要在猫笼里进行隔离，暂时没有猫笼的用纸箱代替，纸箱里可以放旧衣服或报纸</p>
<p>隔离时间约一个月，等小猫打完疫苗就可以放出来了</p>
<h2 id="疫苗"><a href="#疫苗" class="headerlink" title="疫苗"></a>疫苗</h2><p>三联<br>3周后可以可以开始第一次注射疫苗，然后是5周第二次，7周第三次</p>
<p>打完疫苗才能洗澡</p>
<h2 id="猫砂"><a href="#猫砂" class="headerlink" title="猫砂"></a>猫砂</h2><p>要教会小猫用猫砂</p>
<blockquote>
<p>如果发现捡回来的小猫已经会使用了并且有点都不怕人，说明这个猫是别人养过的</p>
</blockquote>
<p>家里暂时没有猫砂的，可以用用撕碎的卫生纸、活性炭、大米等代替</p>
<h2 id="猫砂盆"><a href="#猫砂盆" class="headerlink" title="猫砂盆"></a>猫砂盆</h2><p>分带盖的和不带盖的</p>
<p>最好选带盖的，有一个小门供猫进出</p>
<p>隔离的时候，最好等猫笼到了之后，选择对应的尺寸的猫砂盆，不然可能放不进去（不要问我为啥会知道）</p>
<h2 id="猫粮"><a href="#猫粮" class="headerlink" title="猫粮"></a>猫粮</h2><p>注意不要喂人的食物给猫吃</p>
<h2 id="常用物品"><a href="#常用物品" class="headerlink" title="常用物品"></a>常用物品</h2><ul>
<li>猫粮</li>
<li>猫零食</li>
<li>猫笼</li>
<li>猫砂</li>
<li>猫砂盆</li>
<li>逗猫棒</li>
<li>猫爬架</li>
<li>外出用猫笼子</li>
</ul>
<h2 id="绝育"><a href="#绝育" class="headerlink" title="绝育"></a>绝育</h2><p>绝育对猫和人都有好处</p>
<h2 id="演技"><a href="#演技" class="headerlink" title="演技"></a>演技</h2><p>猫如果咬人或抓人，要表现的很疼跟夸张的样子，一两次它就知道不能咬你了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从楼下捡了一只小猫，记录下养猫心得&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20171018150829785129635.png&quot; width=&quot;492&quot; height=&quot;297&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="life" scheme="http://jimxu.me/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>花</title>
    <link href="http://jimxu.me/2017/10/18/some-flowers/"/>
    <id>http://jimxu.me/2017/10/18/some-flowers/</id>
    <published>2017-10-18T02:57:06.000Z</published>
    <updated>2017-11-02T03:43:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>读书读到山丹丹，搜了下长什么样，以为是彼岸花，然而并不是。<br>又想起小时候听人说彼岸花又叫打碗碗花，不能摘，摘了回家就会把碗打碎，结果也并不是。<br>感觉世界观在崩塌。。。</p>
<a id="more"></a>
<h2 id="打碗碗花"><a href="#打碗碗花" class="headerlink" title="打碗碗花"></a>打碗碗花</h2><blockquote>
<p>打碗碗花，多年生草本植物。根状茎细圆柱形，白色。茎蔓生、缠绕或匍匐状，有棱角，无毛，基部常有分枝。一年生草本，全体不被毛，植株通常矮小，高8-30（-40）厘米，常自基部分枝，具细长白色的根。- 百度百度</p>
</blockquote>
<p><img src="https://gss2.bdstatic.com/-fo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike272%2C5%2C5%2C272%2C90/sign=36c00bbcef24b899ca31716a0f6f76f0/54fbb2fb43166d2251b23428402309f79152d240.jpg" width="200" height="300"></p>
<h2 id="山丹丹"><a href="#山丹丹" class="headerlink" title="山丹丹"></a>山丹丹</h2><blockquote>
<p>山丹丹花，学名斑百合，别名红百合，生活中中经常被称为“山丹丹花”，百合科，多年生草本。地下具卵球形鳞茎，有少数白色肉质鳞片。茎直立，高30─60厘米，无毛。叶线状至线状披针形，边缘和背面脉上有乳突。无珠芽。花一至数朵，生于茎端和叶腋内，直立，夏初开花；花被片六枚，两轮，披针形或长椭圆形；朱红色或橘红色，内面有紫褐色斑点，开放后开展，但不向外反卷或稍反卷。蒴果椭圆形。 - 百度百科</p>
<p>山丹丹过一年多开一朵花   - 《生活是很好玩的》 汪曾祺</p>
</blockquote>
<p><img src="https://gss3.bdstatic.com/7Po3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike933%2C5%2C5%2C933%2C330/sign=cdec9ef713d5ad6ebef46cb8e0a252be/4034970a304e251f8a3d41cbaf86c9177f3e533e.jpg" width="300" height="200"></p>
<h2 id="彼岸花"><a href="#彼岸花" class="headerlink" title="彼岸花"></a>彼岸花</h2><blockquote>
<p>彼岸花分为红色、白色、黄色三种，红色彼岸花盛开于地狱、白色彼岸花绽放于天堂。<br>红色的彼岸花又称曼珠沙华（manjusaka），《法华经》中的四华（花）之一。原产于中国长江流域，分布在长江中下游及西南部分地区，相关记载最早见于唐代，被称作“无义草”、“龙爪花”。民间有许多关于“彼岸花”的传说。另有以《彼岸花》为名的歌曲和小说作品。<br>彼岸花，恶魔的温柔。日本民间传说中自愿投入地狱的花朵，被众魔遣回，但仍徘徊于黄泉路上，众魔不忍，遂同意让她开在此路上，给离开人界的魂们一个指引与安慰。地狱少女中的阎魔爱，就喜欢这种花。雪白色与血红色的彼岸花共同代表死亡。传言曼陀罗华盛开于天堂之路，曼珠沙华布满在地狱之途。同是代表死亡，一个却偏向于对死亡的另一种解释：新生，另一个偏向于对痛苦与悔恨的彷徨与徘徊：堕落。所以说地狱与天堂，仅有一线之隔。所谓天使与恶魔的区别，不过是颜色与背负的含义罢了。  - 百度百科</p>
</blockquote>
<p><img src="https://gss2.bdstatic.com/-fo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike116%2C5%2C5%2C116%2C38/sign=17997f685a82b2b7b392319650c4a08a/e4dde71190ef76c611321c479e16fdfaae5167fe.jpg" width="200" height="300"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;读书读到山丹丹，搜了下长什么样，以为是彼岸花，然而并不是。&lt;br&gt;又想起小时候听人说彼岸花又叫打碗碗花，不能摘，摘了回家就会把碗打碎，结果也并不是。&lt;br&gt;感觉世界观在崩塌。。。&lt;/p&gt;
    
    </summary>
    
    
      <category term="life" scheme="http://jimxu.me/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>git Error: Permission denied (publickey)</title>
    <link href="http://jimxu.me/2017/10/16/git-Error-Permission-denied-publickey/"/>
    <id>http://jimxu.me/2017/10/16/git-Error-Permission-denied-publickey/</id>
    <published>2017-10-16T08:36:24.000Z</published>
    <updated>2017-11-02T03:43:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>执行<code>ssh-add id_rsa</code></p>
<a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;执行&lt;code&gt;ssh-add id_rsa&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://jimxu.me/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>phpstorm生成函数调用关系</title>
    <link href="http://jimxu.me/2017/10/16/phpstorm-generate-Call-Hierarchy/"/>
    <id>http://jimxu.me/2017/10/16/phpstorm-generate-Call-Hierarchy/</id>
    <published>2017-10-16T08:25:39.000Z</published>
    <updated>2017-11-02T03:43:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>知乎上有人提问如何生成函数调用路程图</p>
<p>原问题见：<br><a href="https://www.zhihu.com/question/34495043/answer/244410441" target="_blank" rel="external">https://www.zhihu.com/question/34495043/answer/244410441</a></p>
<a id="more"></a>
<p>phpstorm也有检查函数调用这个功能</p>
<p>在偏好设置中搜索关键字 Call Hierarchy</p>
<p>找到快捷键 ctrl+alt+h</p>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/20171016150814248321882.png"></p>
<p>使用效果如下：</p>
<p>选中一个函数array_slice，按快捷键，在右边生成了该函数所有的调用关系</p>
<p>与查看用例find usage不同的是，Call Hierarchy功能会递归的寻找用例的用例，直到找到没有入口函数为止</p>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/20171016150814276075001.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;知乎上有人提问如何生成函数调用路程图&lt;/p&gt;
&lt;p&gt;原问题见：&lt;br&gt;&lt;a href=&quot;https://www.zhihu.com/question/34495043/answer/244410441&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.zhihu.com/question/34495043/answer/244410441&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://jimxu.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>phpstorm忽略拼写错误</title>
    <link href="http://jimxu.me/2017/08/21/phpstorm-ignore-spell-error/"/>
    <id>http://jimxu.me/2017/08/21/phpstorm-ignore-spell-error/</id>
    <published>2017-08-21T03:23:39.000Z</published>
    <updated>2017-11-02T03:43:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170821150328588236449.png" width="492" height="297"></p>
<p>phpstorm会检查拼写单词的拼写错误<br>但是有时候会给我们造成困扰，比如我们公司的名称不是一个正规的单词就会报错</p>
<a id="more"></a>
<p>打开偏好设置</p>
<p>Editor &gt; Spelling</p>
<p>将要忽略的单词添加到<code>Accepted Words</code>中</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20170821150328588236449.png&quot; width=&quot;492&quot; height=&quot;297&quot;&gt;&lt;/p&gt;
&lt;p&gt;phpstorm会检查拼写单词的拼写错误&lt;br&gt;但是有时候会给我们造成困扰，比如我们公司的名称不是一个正规的单词就会报错&lt;/p&gt;
    
    </summary>
    
    
      <category term="phpstorm" scheme="http://jimxu.me/tags/phpstorm/"/>
    
  </entry>
  
  <entry>
    <title>hhkb初体验</title>
    <link href="http://jimxu.me/2017/08/17/hhkb-first-trial/"/>
    <id>http://jimxu.me/2017/08/17/hhkb-first-trial/</id>
    <published>2017-08-17T04:21:10.000Z</published>
    <updated>2017-11-02T03:43:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170817150294391984465.jpg" width="492" height="297"></p>
<a id="more"></a>
<h2 id="设置hhkb"><a href="#设置hhkb" class="headerlink" title="设置hhkb"></a>设置hhkb</h2><p>011001</p>
<p>第一位和第二位01表示Macintosh模式<br>第三位1表示Delete键删除<br>第六位1表示开启自动唤醒功能（网上是这么说的，然而实际使用发现改成0反而才有唤醒效果，如果是1的话需要重新连接才行）</p>
<h2 id="关于键位"><a href="#关于键位" class="headerlink" title="关于键位"></a>关于键位</h2><ul>
<li>control键</li>
</ul>
<p><code>control</code>键位于A键左侧，替代了<code>caps lock</code>非常方便使用vim</p>
<p>平时的键盘也是开启mac的键盘功能将<code>caps lock</code>替换成<code>control</code>的</p>
<ul>
<li>方向键</li>
</ul>
<p>没有方向键前期会有不少的困扰，多用一段时间也就习惯了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20170817150294391984465.jpg&quot; width=&quot;492&quot; height=&quot;297&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="life" scheme="http://jimxu.me/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>postman模拟图片上传</title>
    <link href="http://jimxu.me/2017/08/10/postman-test-image-upload/"/>
    <id>http://jimxu.me/2017/08/10/postman-test-image-upload/</id>
    <published>2017-08-10T07:30:32.000Z</published>
    <updated>2017-11-02T03:43:37.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<p>Headers留空，Body添加一个key，key的属性选file</p>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170810150235019860302.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Headers留空，Body添加一个key，key的属性选file&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20170810150235019860302.png&quot;&gt;&lt;/p&gt;

    
    </summary>
    
    
      <category term="postman" scheme="http://jimxu.me/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>使用composer</title>
    <link href="http://jimxu.me/2017/08/04/using-composer/"/>
    <id>http://jimxu.me/2017/08/04/using-composer/</id>
    <published>2017-08-04T07:27:25.000Z</published>
    <updated>2017-11-02T03:43:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170804150183174467257.png" width="492" height="297"></p>
<a id="more"></a>
<h1 id="安装composer"><a href="#安装composer" class="headerlink" title="安装composer"></a>安装composer</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install composer</div></pre></td></tr></table></figure>
<h1 id="修改源"><a href="#修改源" class="headerlink" title="修改源"></a>修改源</h1><p>方法一： 修改 composer 的全局配置文件（推荐方式）<br>打开命令行窗口（windows用户）或控制台（Linux、Mac 用户）并执行如下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</div></pre></td></tr></table></figure>
<p>方法二： 修改当前项目的 composer.json 配置文件：<br>打开命令行窗口（windows用户）或控制台（Linux、Mac 用户），进入你的项目的根目录（也就是 composer.json 文件所在目录），执行如下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer config repo.packagist composer https://packagist.phpcomposer.com</div></pre></td></tr></table></figure>
<p>上述命令将会在当前项目中的 composer.json 文件的末尾自动添加镜像的配置信息（你也可以自己手工添加）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&quot;repositories&quot;: &#123;</div><div class="line">    &quot;packagist&quot;: &#123;</div><div class="line">        &quot;type&quot;: &quot;composer&quot;,</div><div class="line">        &quot;url&quot;: &quot;https://packagist.phpcomposer.com&quot;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="composer使用"><a href="#composer使用" class="headerlink" title="composer使用"></a>composer使用</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20170804150183174467257.png&quot; width=&quot;492&quot; height=&quot;297&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://jimxu.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>go学习笔记 - 语法</title>
    <link href="http://jimxu.me/2017/07/31/go-study-note-grammar/"/>
    <id>http://jimxu.me/2017/07/31/go-study-note-grammar/</id>
    <published>2017-07-31T10:16:25.000Z</published>
    <updated>2017-11-02T03:43:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170802150164469935152.png" width="492" height="297"></p>
<a id="more"></a>
<h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><ul>
<li>语法简易</li>
<li>自动格式化代码，保证所有人代码风格一致</li>
<li>并发处理</li>
<li>垃圾回收</li>
<li>函数多返回值，返回错误</li>
</ul>
<h1 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h1><ul>
<li>要有main包和main函数</li>
<li>变量必须要使用，引入的包必须要使用</li>
<li>表达式可以省略括号，不能省略花括号，左花括号必须在行尾</li>
</ul>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="keyword">import</span> (</div><div class="line">	<span class="string">"fmt"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	a := <span class="number">3</span></div><div class="line">	<span class="keyword">if</span> a &gt; <span class="number">1</span> &#123;</div><div class="line">		fmt.Printf(<span class="string">"%T,%v"</span>, a, a)</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="包"><a href="#包" class="headerlink" title="包"></a>包</h1><p>引入多个包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">package main</div><div class="line"></div><div class="line">import (</div><div class="line">	&quot;fmt&quot;</div><div class="line">	&quot;math&quot;</div><div class="line">)</div></pre></td></tr></table></figure>
<p>不可以import未被使用的包</p>
<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a <span class="keyword">int8</span> = <span class="number">4</span></div><div class="line"><span class="keyword">var</span> a = <span class="number">4</span></div><div class="line">a := <span class="number">8</span>    <span class="comment">//:=只能用在函数内</span></div></pre></td></tr></table></figure>
<p>byte: unit8</p>
<p>rune: int32</p>
<h1 id="自增"><a href="#自增" class="headerlink" title="自增"></a>自增</h1><p>不能前置，不能用作表达式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a++;  //√</div><div class="line">++a;  //×</div><div class="line">if (a++) &#123;  //×</div></pre></td></tr></table></figure>
<h1 id="数组及遍历"><a href="#数组及遍历" class="headerlink" title="数组及遍历"></a>数组及遍历</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	a := [<span class="number">3</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</div><div class="line">	<span class="keyword">for</span> i, s := <span class="keyword">range</span> a &#123;</div><div class="line">		<span class="built_in">println</span>(i, s)</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h1><p>指针不能运算</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	a := <span class="number">3</span></div><div class="line">	<span class="keyword">var</span> p *<span class="keyword">int</span> = &amp;a</div><div class="line">	<span class="built_in">print</span>(*p)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h1><p>对比下php和go的swithc语句</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$a = <span class="number">1</span></div><div class="line"><span class="keyword">switch</span> ($a) &#123;</div><div class="line">    <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">    <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">        <span class="keyword">echo</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">    <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">        <span class="keyword">echo</span> <span class="number">3</span>;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">    <span class="keyword">default</span>:</div><div class="line">        <span class="keyword">echo</span> <span class="string">'default'</span>;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>输出为1</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	a := <span class="number">1</span></div><div class="line">	<span class="keyword">switch</span> a &#123;</div><div class="line">	<span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">	<span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">		<span class="built_in">println</span>(<span class="number">1</span>)</div><div class="line">		<span class="keyword">break</span></div><div class="line">	<span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">		<span class="built_in">println</span>(<span class="number">3</span>)</div><div class="line">	<span class="keyword">default</span>:</div><div class="line">		<span class="keyword">break</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>输出为空</p>
<p>go会自动在语句为空的case后面补上break，相当于没有执行任何操作</p>
<p>要实现php中的多个case执行相同的语句，应该使用下面的写法：</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">case</span> <span class="number">1</span>,<span class="number">2</span>:</div><div class="line">	<span class="built_in">println</span>(<span class="number">1</span>)</div><div class="line">	<span class="keyword">break</span></div></pre></td></tr></table></figure>
<h1 id="for"><a href="#for" class="headerlink" title="for"></a>for</h1><p>初始语句和结束语句可以省略</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">for sum &lt; 1000 &#123;</div><div class="line">	sum += sum</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>需指定入参和出参的类型，可以返回多个值</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//x后面的int可省略，根据王垠的博客说的最好保留</div><div class="line">func add(x int, y int) int &#123;</div><div class="line">	return x + y</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="defer"><a href="#defer" class="headerlink" title="defer"></a>defer</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">package main</div><div class="line"></div><div class="line">import &quot;fmt&quot;</div><div class="line"></div><div class="line">func main() &#123;</div><div class="line">	defer fmt.Println(&quot;world&quot;)</div><div class="line"></div><div class="line">	fmt.Println(&quot;hello&quot;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>输出结果： </p>
<p>hello</p>
<p>world</p>
</blockquote>
<h1 id="struct"><a href="#struct" class="headerlink" title="struct"></a>struct</h1><p>用点号<code>.</code>访问结构体中的字段</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">type Vertex struct &#123;</div><div class="line">	X int</div><div class="line">	Y int</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="slice"><a href="#slice" class="headerlink" title="slice"></a>slice</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">s := []int&#123;2, 3, 5, 7, 11, 13&#125;</div><div class="line"></div><div class="line">//slice长度</div><div class="line">len(s)</div><div class="line"></div><div class="line">//slice转string,第二个参数是分隔符</div><div class="line">strings.Join(s,&apos;_&apos;)</div><div class="line"></div><div class="line">//打印slice</div><div class="line">fmt.Printf(&quot;%v&quot;, s)</div></pre></td></tr></table></figure>
<h1 id="map"><a href="#map" class="headerlink" title="map"></a>map</h1><h1 id="函数-1"><a href="#函数-1" class="headerlink" title="函数"></a>函数</h1><p>函数可以作为函数的入参</p>
<p>闭包</p>
<blockquote>
<p>Go 函数可以是一个闭包。闭包是一个函数值，它引用了函数体之外的变量。 这个函数可以对这个引用的变量进行访问和赋值；换句话说这个函数被“绑定”在这个变量上。</p>
</blockquote>
<h1 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h1><p>goroutine<br>channel</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ch &lt;- v    // 将 v 送入 channel ch</div><div class="line">v := &lt;-ch  // 从 ch 接收，并且赋值给 v</div></pre></td></tr></table></figure>
<h1 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h1><h1 id="gc"><a href="#gc" class="headerlink" title="gc"></a>gc</h1><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://tour.go-zh.org/list" target="_blank" rel="external">官网tutorial</a></li>
<li><a href="https://github.com/qyuhen/book" target="_blank" rel="external">《Go语言学习笔记》，雨痕著</a></li>
<li><a href="http://www.yinwang.org/blog-cn/2014/04/18/golang" target="_blank" rel="external">王垠：对Go语言的综合评价</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20170802150164469935152.png&quot; width=&quot;492&quot; height=&quot;297&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="go" scheme="http://jimxu.me/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>hexo中添加github组件</title>
    <link href="http://jimxu.me/2017/07/27/hexo-yelee-add-github-widget/"/>
    <id>http://jimxu.me/2017/07/27/hexo-yelee-add-github-widget/</id>
    <published>2017-07-27T08:29:00.000Z</published>
    <updated>2017-07-31T13:14:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170727150114537274249.png" width="492" height="297"></p>
<p>Hexo的yelee支持添加github组件</p>
<a id="more"></a>
<h2 id="如何开启"><a href="#如何开启" class="headerlink" title="如何开启"></a>如何开启</h2><p>修改主题配置文件 <code>{path_to_hexo}/themes/yelee/_config.yml</code>, 开启此功能</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">github_widget: true</div></pre></td></tr></table></figure>
<h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>在文章中想要添加github组件的地方添加如下代码:</p>
<p>{user_name} github作者名<br>{project_name} github项目名称</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;github-widget&quot; data-repo=&quot;&#123;user_name&#125;/&#123;project_name&#125;&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;github-widget&quot; data-repo=&quot;hustcc/GitHub-Repo-Widget.js&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>会显示如下效果：</p>
<div class="github-widget" data-repo="hustcc/GitHub-Repo-Widget.js"></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20170727150114537274249.png&quot; width=&quot;492&quot; height=&quot;297&quot;&gt;&lt;/p&gt;
&lt;p&gt;Hexo的yelee支持添加github组件&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://jimxu.me/tags/hexo/"/>
    
      <category term="github" scheme="http://jimxu.me/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>go学习笔记：Beego</title>
    <link href="http://jimxu.me/2017/07/27/go-study-note-beego-bee/"/>
    <id>http://jimxu.me/2017/07/27/go-study-note-beego-bee/</id>
    <published>2017-07-27T07:33:17.000Z</published>
    <updated>2017-08-01T13:20:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170727150114170158010.png"></p>
<p>谢大的beego开源项目：</p>
<div class="github-widget" data-repo="astaxie/beego"></div>

<a id="more"></a>
<h2 id="安装beego"><a href="#安装beego" class="headerlink" title="安装beego"></a>安装beego</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">go get -u github.com/astaxie/beego</div></pre></td></tr></table></figure>
<h2 id="安装bee工具"><a href="#安装bee工具" class="headerlink" title="安装bee工具"></a>安装bee工具</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">go get github.com/beego/bee</div></pre></td></tr></table></figure>
<h2 id="使用bee工具"><a href="#使用bee工具" class="headerlink" title="使用bee工具"></a>使用bee工具</h2><h3 id="工具命令一览"><a href="#工具命令一览" class="headerlink" title="工具命令一览"></a>工具命令一览</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">new         create an application base on beego framework</div><div class="line">run         run the app which can hot compile</div><div class="line">pack        compress an beego project</div><div class="line">api         create an api application base on beego framework</div><div class="line">bale        packs non-Go files to Go source files</div><div class="line">version     show the bee &amp; beego version</div><div class="line">generate    source code generator</div><div class="line">migrate     run database migrations</div></pre></td></tr></table></figure>
<h3 id="生成一个项目"><a href="#生成一个项目" class="headerlink" title="生成一个项目"></a>生成一个项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd src</div><div class="line">bee new &#123;project_name&#125;</div></pre></td></tr></table></figure>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/2017072715011416163291.png"></p>
<p>然后在src目录下生成一个项目，结构入下：</p>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170727150114096074080.png"></p>
<h3 id="创建api"><a href="#创建api" class="headerlink" title="创建api"></a>创建api</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd src</div><div class="line">bee api &#123;project_name&#125;</div></pre></td></tr></table></figure>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170727150114112858689.png"></p>
<p>结构如下：</p>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170727150114117882110.png"></p>
<p>对比之前的结构可以发现在controllers和models目录分别生成了object.go和user.go文件</p>
<h3 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd src</div><div class="line">bee run &#123;project_name&#125;</div></pre></td></tr></table></figure>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170727150114201058758.png"></p>
<p>在浏览器中访问<code>http://localhost:8080</code>,结果如下图所示：<br><img src="http://o9xbyqajf.bkt.clouddn.com/20170727150114189785456.png" width="492" height="297"></p>
<p>官网文档是这么介绍的</p>
<blockquote>
<p>这样我们的应用已经在 8080 端口(beego 的默认端口)跑起来了.你是不是觉得很神奇，为什么没有 nginx 和 apache 居然可以自己干这个事情？是的，Go 其实已经做了网络层的东西，beego 只是封装了一下，所以可以做到不需要 nginx 和 apache</p>
</blockquote>
<p>我本人在使用的时候发现如果打开了nginx有时会报404的错误，所以最好先关闭nginx服务</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20170727150114170158010.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;谢大的beego开源项目：&lt;/p&gt;
&lt;div class=&quot;github-widget&quot; data-repo=&quot;astaxie/beego&quot;&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="go" scheme="http://jimxu.me/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Permanently added the RSA host key for IP address to the list of known hosts</title>
    <link href="http://jimxu.me/2017/07/26/Permanently-added-the-RSA-host-key-for-IP-address-to-the-list-of-known-hosts/"/>
    <id>http://jimxu.me/2017/07/26/Permanently-added-the-RSA-host-key-for-IP-address-to-the-list-of-known-hosts/</id>
    <published>2017-07-26T10:27:02.000Z</published>
    <updated>2017-07-31T13:14:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170726150106524593664.png" width="492" height="297"></p>
<p>将Hexo项目托管到Coding.net后，使用<code>hexo g -d</code>提交代码后报下面的Warning</p>
<blockquote>
<p>Permanently added the RSA host key for IP address ‘123.59.85.105’ to the list of known hosts.</p>
</blockquote>
<a id="more"></a>
<p><code>123.59.85.105</code>为域名<code>coding.net</code>的ip地址</p>
<p>猜测可能的原因是hexo命令deploy时不会检查<code>~/.ssh/known_hosts</code>文件</p>
<p>编辑config文件 <code>~/.ssh/config</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Host coding.net</div><div class="line">      HostName 123.59.85.105</div><div class="line">      IdentityFile &#123;path_to_private_key&#125;</div><div class="line">      User &#123;user_name&#125;</div></pre></td></tr></table></figure>
<p>此时提交就没有warning了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20170726150106524593664.png&quot; width=&quot;492&quot; height=&quot;297&quot;&gt;&lt;/p&gt;
&lt;p&gt;将Hexo项目托管到Coding.net后，使用&lt;code&gt;hexo g -d&lt;/code&gt;提交代码后报下面的Warning&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Permanently added the RSA host key for IP address ‘123.59.85.105’ to the list of known hosts.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="error" scheme="http://jimxu.me/tags/error/"/>
    
      <category term="hexo" scheme="http://jimxu.me/tags/hexo/"/>
    
      <category term="git" scheme="http://jimxu.me/tags/git/"/>
    
      <category term="ssh" scheme="http://jimxu.me/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>Maximum function nesting level of 256 reached</title>
    <link href="http://jimxu.me/2017/07/26/Maximum-function-nesting-level-of-256-reached/"/>
    <id>http://jimxu.me/2017/07/26/Maximum-function-nesting-level-of-256-reached/</id>
    <published>2017-07-26T09:50:04.000Z</published>
    <updated>2017-07-31T13:14:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170726150106445031039.png" width="492" height="297"></p>
<p>Maximum function nesting level of ‘256’ reached, aborting!函数递归深度超过256</p>
<a id="more"></a>
<p>php本身并没有限制函数递归深度，其实是xdebug扩展报的错</p>
<p>检查php的xdebug配置</p>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170726150106262652534.png"></p>
<p>修改xdebug配置<code>/usr/local/etc/php/7.0/conf.d/ext-xdebug.ini</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xdebug.max_nesting_level=512</div></pre></td></tr></table></figure>
<p>重启 php-fpm,生效</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20170726150106445031039.png&quot; width=&quot;492&quot; height=&quot;297&quot;&gt;&lt;/p&gt;
&lt;p&gt;Maximum function nesting level of ‘256’ reached, aborting!函数递归深度超过256&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://jimxu.me/tags/php/"/>
    
      <category term="xdebug" scheme="http://jimxu.me/tags/xdebug/"/>
    
      <category term="error" scheme="http://jimxu.me/tags/error/"/>
    
  </entry>
  
  <entry>
    <title>yaf学习笔记 - request类和respose类</title>
    <link href="http://jimxu.me/2017/07/26/yaf-study-note-request-and-respose/"/>
    <id>http://jimxu.me/2017/07/26/yaf-study-note-request-and-respose/</id>
    <published>2017-07-26T08:48:53.000Z</published>
    <updated>2017-08-01T13:20:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170726150106236928086.png" width="492" height="297"></p>
<a id="more"></a>
<h2 id="Yaf-Request-Abstract"><a href="#Yaf-Request-Abstract" class="headerlink" title="Yaf-Request-Abstract"></a>Yaf-Request-Abstract</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">/* Methods */</div><div class="line">public void getActionName ( void )</div><div class="line">public void getBaseUri ( void )</div><div class="line">public void getControllerName ( void )</div><div class="line">public void getEnv ( string $name [, string $default ] )</div><div class="line">public void getException ( void )</div><div class="line">public void getLanguage ( void )</div><div class="line">public void getMethod ( void )</div><div class="line">public void getModuleName ( void )</div><div class="line">public void getParam ( string $name [, string $default ] )</div><div class="line">public void getParams ( void )</div><div class="line">public void getRequestUri ( void )</div><div class="line">public void getServer ( string $name [, string $default ] )</div><div class="line">public void isCli ( void )</div><div class="line">public void isDispatched ( void )</div><div class="line">public void isGet ( void )</div><div class="line">public void isHead ( void )</div><div class="line">public void isOptions ( void )</div><div class="line">public void isPost ( void )</div><div class="line">public void isPut ( void )</div><div class="line">public void isRouted ( void )</div><div class="line">public void isXmlHttpRequest ( void )</div><div class="line">public void setActionName ( string $action )</div><div class="line">public bool setBaseUri ( string $uir )</div><div class="line">public void setControllerName ( string $controller )</div><div class="line">public void setDispatched ( void )</div><div class="line">public void setModuleName ( string $module )</div><div class="line">public void setParam ( string $name [, string $value ] )</div><div class="line">public void setRequestUri ( string $uir )</div><div class="line">public void setRouted ([ string $flag ] )</div></pre></td></tr></table></figure>
<h2 id="Yaf-Response-Abstract"><a href="#Yaf-Response-Abstract" class="headerlink" title="Yaf-Response-Abstract"></a>Yaf-Response-Abstract</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">/* Methods */</div><div class="line">public bool appendBody ( string $content [, string $key ] )</div><div class="line">public bool clearBody ([ string $key ] )</div><div class="line">public void clearHeaders ( void )</div><div class="line">private void __clone ( void )</div><div class="line">public __construct ( void )</div><div class="line">public void __destruct ( void )</div><div class="line">public mixed getBody ([ string $key ] )</div><div class="line">public void getHeader ( void )</div><div class="line">public bool prependBody ( string $content [, string $key ] )</div><div class="line">public void response ( void )</div><div class="line">protected void setAllHeaders ( void )</div><div class="line">public bool setBody ( string $content [, string $key ] )</div><div class="line">public void setHeader ( void )</div><div class="line">public void setRedirect ( void )</div><div class="line">private void __toString ( void )</div></pre></td></tr></table></figure>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul>
<li><p><a href="http://php.net/manual/en/class.yaf-response-abstract.php" target="_blank" rel="external">Yaf-Response-Abstract</a></p>
</li>
<li><p><a href="http://php.net/manual/en/class.yaf-request-abstract.php" target="_blank" rel="external">Yaf-Request-Abstract</a></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20170726150106236928086.png&quot; width=&quot;492&quot; height=&quot;297&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="yaf" scheme="http://jimxu.me/tags/yaf/"/>
    
  </entry>
  
  <entry>
    <title>使用php对接prometheus监控系统</title>
    <link href="http://jimxu.me/2017/07/25/prometheus-on-php/"/>
    <id>http://jimxu.me/2017/07/25/prometheus-on-php/</id>
    <published>2017-07-25T07:55:13.000Z</published>
    <updated>2017-07-31T13:14:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170725150097148897159.png" width="492" height="297"></p>
<a id="more"></a>
<h2 id="什么是prometheus"><a href="#什么是prometheus" class="headerlink" title="什么是prometheus"></a>什么是prometheus</h2><ul>
<li>监控系统</li>
<li>报警机制</li>
<li>时间序列数据</li>
<li>支持Java,Go，PHP等</li>
</ul>
<h2 id="prometheus-client-php"><a href="#prometheus-client-php" class="headerlink" title="prometheus_client_php"></a>prometheus_client_php</h2><p>A prometheus client library written in PHP</p>
<div class="github-widget" data-repo="Jimdo/ prometheus_client_php"></div>

<h2 id="对接prometheus系统"><a href="#对接prometheus系统" class="headerlink" title="对接prometheus系统"></a>对接prometheus系统</h2><p>第一步 将监控数据写入适配器，如redis、apc<br>第二步 提供接口供prometheus系统调用</p>
<h2 id="四种数据类型"><a href="#四种数据类型" class="headerlink" title="四种数据类型"></a>四种数据类型</h2><ul>
<li>counter 计时器</li>
</ul>
<p>只能增加value值，适合记录持续增长的，如接接口调用次数、请求总数、页面访问次数等</p>
<ul>
<li>gauge 尺度盘</li>
</ul>
<p>可以任意修改value值,适合记录瞬时数据，如CPU使用率、内存使用情况、磁盘空间等</p>
<ul>
<li>histogram 直方图</li>
</ul>
<p>用来度量数据中值的分布情况，如程序执行时间：0-100ms、100-200ms、200-300ms、&gt;300ms 的分布情况</p>
<ul>
<li>summary</li>
</ul>
<h2 id="adapter-存储介质"><a href="#adapter-存储介质" class="headerlink" title="adapter 存储介质"></a>adapter 存储介质</h2><p>三种adapter</p>
<ul>
<li>apc</li>
<li>redis</li>
<li>in-memory</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ($adapter === <span class="string">'redis'</span>) &#123;</div><div class="line">    Redis::setDefaultOptions(<span class="keyword">array</span>(<span class="string">'host'</span> =&gt; <span class="keyword">isset</span>($_SERVER[<span class="string">'REDIS_HOST'</span>]) ? $_SERVER[<span class="string">'REDIS_HOST'</span>] : <span class="string">'127.0.0.1'</span>));</div><div class="line">    $adapter = <span class="keyword">new</span> Prometheus\Storage\Redis();</div><div class="line">&#125; <span class="keyword">elseif</span> ($adapter === <span class="string">'apc'</span>) &#123;</div><div class="line">    $adapter = <span class="keyword">new</span> Prometheus\Storage\APC();</div><div class="line">&#125; <span class="keyword">elseif</span> ($adapter === <span class="string">'in-memory'</span>) &#123;</div><div class="line">    $adapter = <span class="keyword">new</span> Prometheus\Storage\InMemory();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="register-注册器"><a href="#register-注册器" class="headerlink" title="register 注册器"></a>register 注册器</h2><p>方法列表：</p>
<ul>
<li>registerCounter</li>
<li>getCounter </li>
<li>getOrRegisterCounter</li>
<li>registerGauge</li>
<li>getGauge</li>
<li>getOrRegisterGauge</li>
<li>registerHistogram</li>
<li>getHistogram </li>
<li>getOrRegisterHistogram</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$registry = new CollectorRegistry($adapter);</div><div class="line"></div><div class="line">//或者，获取默认的registry</div><div class="line">$registry = \Prometheus\CollectorRegistry::getDefault();</div></pre></td></tr></table></figure>
<h2 id="供prometheus调用的接口"><a href="#供prometheus调用的接口" class="headerlink" title="供prometheus调用的接口"></a>供prometheus调用的接口</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$registry = new CollectorRegistry($adapter);</div><div class="line">$renderer = new RenderTextFormat();</div><div class="line">$result = $renderer-&gt;render($registry-&gt;getMetricFamilySamples());</div><div class="line"></div><div class="line">header(&apos;Content-type: &apos; . RenderTextFormat::MIME_TYPE);</div><div class="line">echo $result;</div></pre></td></tr></table></figure>
<h2 id="清除测试数据"><a href="#清除测试数据" class="headerlink" title="清除测试数据"></a>清除测试数据</h2><p>测试的时候想要清除在apc中存储的prometheus数据，可以调用下面的方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$adapter = new Prometheus\Storage\APC();</div><div class="line">$adapter-&gt;flushAPC();</div></pre></td></tr></table></figure>
<p>同理，清除redis和memory</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$adapter = new Prometheus\Storage\Redis();</div><div class="line">$adapter-&gt;flushRedis();</div><div class="line"></div><div class="line">$adapter = new Prometheus\Storage\InMemory();</div><div class="line">$adapter-&gt;flushMemory();</div></pre></td></tr></table></figure>
<h2 id="counter用法"><a href="#counter用法" class="headerlink" title="counter用法"></a>counter用法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$counter = $registry-&gt;getOrRegisterCounter(&apos;aaa&apos;, &apos;bbb&apos;, &apos;ccc&apos;, [&apos;color&apos;]);</div><div class="line">$counter-&gt;incBy(1, [&apos;red&apos;]);</div></pre></td></tr></table></figure>
<p> 结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># HELP aaa_bbb ccc</div><div class="line"># TYPE aaa_bbb counter</div><div class="line">aaa_bbb&#123;color=&quot;red&quot;&#125; 1</div></pre></td></tr></table></figure>
<p>当然也可以同时设置两个label</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$counter = $registry-&gt;getOrRegisterCounter(&apos;aaa&apos;, &apos;bbb&apos;, &apos;ccc&apos;, [&apos;color&apos;, &apos;size&apos;]);</div><div class="line">$counter-&gt;incBy(1, [&apos;red&apos;, 10]);</div></pre></td></tr></table></figure>
<p> 结果为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># HELP aaa_bbb ccc</div><div class="line"># TYPE aaa_bbb counter</div><div class="line">aaa_bbb&#123;color=&quot;red&quot;,size=10&#125; 1</div></pre></td></tr></table></figure>
<h2 id="gauge"><a href="#gauge" class="headerlink" title="gauge"></a>gauge</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$gauge = $registry-&gt;getOrRegisterGauge(&apos;test&apos;, &apos;some_gauge&apos;, &apos;it sets&apos;, [&apos;type&apos;]);</div><div class="line">$gauge-&gt;set(2.5, [&apos;blue&apos;]);</div></pre></td></tr></table></figure>
<h2 id="histogram"><a href="#histogram" class="headerlink" title="histogram"></a>histogram</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$histogram = $registry-&gt;getOrRegisterHistogram(&apos;test&apos;, &apos;some_histogram&apos;, &apos;it observes&apos;, [&apos;type&apos;], [0.1, 1, 2, 3.5, 4, 5, 6, 7, 8, 9]);</div><div class="line">$histogram-&gt;observe(3.5, [&apos;blue&apos;]);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20170725150097148897159.png&quot; width=&quot;492&quot; height=&quot;297&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://jimxu.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>关闭mac自动大写单词首字母功能</title>
    <link href="http://jimxu.me/2017/07/25/disable-auto-ucfirst-word-on-mac/"/>
    <id>http://jimxu.me/2017/07/25/disable-auto-ucfirst-word-on-mac/</id>
    <published>2017-07-25T07:12:28.000Z</published>
    <updated>2017-07-31T13:14:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170725150097228693096.png" width="492" height="297"></p>
<a id="more"></a>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170725150096665552592.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20170725150097228693096.png&quot; width=&quot;492&quot; height=&quot;297&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="mac" scheme="http://jimxu.me/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>安装xdebug后var_dump显示问题</title>
    <link href="http://jimxu.me/2017/07/24/xdebug-var-dump-display-error/"/>
    <id>http://jimxu.me/2017/07/24/xdebug-var-dump-display-error/</id>
    <published>2017-07-24T09:08:19.000Z</published>
    <updated>2017-07-31T13:14:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170724150088775879.png" width="492" height="297"></p>
<p> 安装了xdebug之后，使用var_dump打印输出时显示错误</p>
<a id="more"></a>
<p> 错误如下：</p>
<p> <img src="http://o9xbyqajf.bkt.clouddn.com/20170724150088734626603.jpg"></p>
<p>在网上查询了一下，有人说先检查一下php的配置中<code>html_errors</code>这项是否是开启的，如果是Off的就把它设置为On</p>
<p>php手册中关于html_errors的介绍：</p>
<blockquote>
<p>html_errors boolean<br>在错误信息中关闭HTML标签。这种新的HTML格式的错误信息是可以点击，它引导用户前往描述该错误或者导致该错误发生的函数的参考信息页面。 这些参考与 docref_root 和 docref_ext 的设置有关。</p>
</blockquote>
<p>检查的方法是在终端输入以下命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php -i | grep html_errors</div></pre></td></tr></table></figure>
<p>好了，先检查一下</p>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170724150088750041484.jpg"></p>
<p>果然是关闭的，去<code>php.ini</code>里开启它吧</p>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170724150088738770125.jpg"></p>
<p>若还未生效<br>查看php设置的<code>xdebug.overload_var_dump</code>这一项，将其设置为0</p>
<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170725150097075965208.png"></p>
<p>改好了重启php-fpm服务</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="http://www.cnblogs.com/huangye-dream/p/4182803.html" target="_blank" rel="external">http://www.cnblogs.com/huangye-dream/p/4182803.html</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20170724150088775879.png&quot; width=&quot;492&quot; height=&quot;297&quot;&gt;&lt;/p&gt;
&lt;p&gt; 安装了xdebug之后，使用var_dump打印输出时显示错误&lt;/p&gt;
    
    </summary>
    
    
      <category term="phpstorm" scheme="http://jimxu.me/tags/phpstorm/"/>
    
      <category term="xdebug" scheme="http://jimxu.me/tags/xdebug/"/>
    
  </entry>
  
  <entry>
    <title>美区apple账号的申请和使用</title>
    <link href="http://jimxu.me/2017/07/21/apple-usa-account/"/>
    <id>http://jimxu.me/2017/07/21/apple-usa-account/</id>
    <published>2017-07-21T14:16:32.000Z</published>
    <updated>2017-07-21T14:28:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o9xbyqajf.bkt.clouddn.com/20170721150064666695739.png" width="492" height="297"></p>
<a id="more"></a>
<h2 id="申请美区账号"><a href="#申请美区账号" class="headerlink" title="申请美区账号"></a>申请美区账号</h2><ul>
<li>先选择一款免费的软件点击下载（必须要有这一步，否则选择付款方式的时候不会出现none的选项)</li>
<li>申请账号，地点选择美国，下一步</li>
<li>输入邮箱账号，密码，下一步</li>
<li>输入姓，名，安全问题，下一步</li>
<li>付款方式处选“None”，填写详细地址，下一步</li>
<li>验证邮箱，成功！</li>
</ul>
<h2 id="快速切换中区账号和美区账号"><a href="#快速切换中区账号和美区账号" class="headerlink" title="快速切换中区账号和美区账号"></a>快速切换中区账号和美区账号</h2><p>使用workflow实现<br><a href="https://workflow.is/workflows/9f3eb6c502b14181a5abd690b16338ec" target="_blank" rel="external">https://workflow.is/workflows/9f3eb6c502b14181a5abd690b16338ec</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o9xbyqajf.bkt.clouddn.com/20170721150064666695739.png&quot; width=&quot;492&quot; height=&quot;297&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="life" scheme="http://jimxu.me/tags/life/"/>
    
  </entry>
  
</feed>
